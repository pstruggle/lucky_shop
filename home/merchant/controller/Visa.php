<?php
namespace app\merchant\controller;

use think\Db;
use think\Log;

class Visa extends Base
{
    private $_visa;
    private $_visaData;
    private $_visaOrder;

    protected function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->_visa = model('visa');
        $this->_visaData = model('visaData');
        $this->_visaOrder = model('visaOrder');
    }
    // 签证列表
    public function visa_list(){
        $where = ['mid'=>$this->merchant['id']];
        if(input('title')){
            $where['v.title'] = ['like','%'.input('title').'%'];
        }
        if(input('status') == '0' || input('status')){
            $where['v.status'] = input('status');
        }
        $visas = $this->_visa->getVisas($where);
        $page = $visas->render($where);
        $this->assign([
            'title' => '签证列表',
            'visas' => $visas,
            'page' => $page
        ]);
        return $this->template();
    }
    // 签证编辑
    public function visa_edit(){
        $act = 'add';
        $visa = input('visa');
        $where = ['id'=>$visa];
        $visa = $this->_visa->where($where)->find();
        if(!empty($visa)){
            $act = 'update';
            $this->assign('visa',$visa);
        }
        $this->assign([
            'title' => '签证编辑',
            'act' => $act
        ]);
        return $this->template();
    }
    // 签证编辑操作
    public function visaedit(){
        $act = input('act')?input('act'):'add';
        $visa = input('visa')?input('visa'):'';
        $map = $this->_visa->getMap($this->merchant['id']);
        switch ($act){
            case 'add':
                $map['status'] = '1';
                $map['addtime'] = time();
                $result = $this->_visa->save($map);
                break;
            case 'update':
                $where = ['id'=>$visa];
                $result = $this->_visa->save($map,$where);
                break;
        }
        if ($result){
            return $this->success('编辑成功','Visa/visa_list');
        }else{
            return $this->error('编辑失败');
        }
    }
    // 签证删除
    public function visadel(){
        $visa = input('visa');
        $where = ['id'=>$visa];
        $result = $this->_visa->where($where)->delete();
        if($result){
            $this->success('编辑成功');
        }else{
            $this->error('编辑失败');
        }
    }
    // 签证所需要资料列表
    public function visa_data(){
        $where = ['v.mid'=>$this->merchant['id']];
        $visa_datas = $this->_visaData->getDatas($where,[],20);
        $page = $visa_datas->render();
        $this->assign([
            'title' => '签证材料库',
            'visa_datas' => $visa_datas,
            'page' => $page,
        ]);
        return $this->template();
    }
    // 签证资料编辑
    public function visa_data_edit(){
        $act = 'add';
        $data = input('data');
        $where = ['id'=>$data];
        $visa_data = $this->_visaData->where($where)->find();
        if(!empty($visa_data)){
            $act = 'update';
            $this->assign('visa_data',$visa_data);
        }
        $this->assign([
            'title' => '签证资料编辑',
            'act' => $act
        ]);
        return $this->template();
    }
    // 签证资料编辑操作
    public function visa_dataedit(){
        $act = input('act');
        $data = input('data');
        $map = [
            'mid' => $this->merchant['id'],
            'title'=> input('title')?input('title'):'',
            'type'=> input('type')?input('type'):'',
            'desc'=> input('desc')?input('desc'):'',
        ];
        $case = input('case/a')?input('case/a'):[];
        $map['case'] = implode(',',$case);
        switch ($act){
            case 'add':
                $map['addtime'] = time();
                $result = $this->_visaData->save($map);
                break ;
            case 'update':
                $where = ['id'=>$data];
                $result = $this->_visaData->save($map,$where);
                break ;
        }
        if($result){
            $this->success('编辑成功','Visa/visa_data');
        }else{
            $this->error('编辑失败');
        }
    }
    // 删除签证
    public function datadel(){
        $data = input('data');
        $where = ['id'=>$data];
        $result = $this->_visaData->where($where)->delete();
        if($result){
            $this->success('编辑成功');
        }else{
            $this->error('编辑失败');
        }
    }
    // 签证订单列表
    public function visa_order(){
        $pay_status = input('pay_status');
        $uid = input('uid');
        $confirm = input('confirm');
        $where = ['o.mid'=>$this->merchant['id']];
        if(!empty($pay_status)){
            $where['o.pay_status'] = $pay_status;
        }
        if(!empty($uid)){
            $where['o.uid'] = $uid;
        }
        if(!empty($confirm)){
            $where['o.confirm'] = $confirm;
        }
        $orders = $this->_visaOrder->getOrderOps($where);
        $this->assign([
            'title' => '签证订单列表',
            'orders' => $orders
        ]);
        return $this->template();
    }
    // 查看订单
    public function eye_order(){
        $oid = input('oid');
        $where = ['o.id'=>$oid];
        $orders = $this->_visaOrder->getOrderOps($where,[],1);
        if(!empty($orders[0])){
            $order = $orders[0];
            $this->assign([
                'order'=>$order,
            ]);
        }else{
            $this->error('您的订单不存在');
        }
        $this->assign([
            'title'=> '订单详情',
        ]);
        return $this->template();
    }
    // 编辑订单操作
    public function editorder(){
        $id = input('id');
        $where = ['id'=>$id,'mid'=>$this->merchant['id']];
        $map = [];
        if(input('confirm')){
            $map['confirm'] = input('confirm');
        }
        $visa_order = Db::table('ly_visa_order')->where($where)->find();
        if($visa_order['pay_status'] != '2'){
            $this->error('该订单未支付，不能操作');
            return ;
        }
        $result = Db::table('ly_visa_order')->where($where)->update($map);
        if($result){
            $visa = Db::table('ly_visa')->where(['id'=>$visa_order['vid']])->find();
            if($visa){
                $aliyun = controller('api/Aliyun');
                $data = [];
                $infos = Db::table('ww_apply')->where('uid',$visa_order['uid'])->field(['name','phone'])->find();

                $data['recNum'] = $infos['phone'];
//                $get = model('get');
                if($map['confirm'] == '2'){
                    $data['temp'] = 'sms_refuse';
                    $data['param'] = [$infos['name'],$visa['title'],'已确认','供应商'];
//                    $g_result = $get->upper($visa_order,'qz');
                    $send_result = $aliyun->ajax_send($data);
                    Log::write('send log :'.json_encode($send_result,JSON_UNESCAPED_UNICODE));
                }elseif($map['confirm'] == '3'){
                    $data['temp'] = 'sms_refuse';
                    $data['param'] = [$infos['name'],$visa['title'],'被拒绝,将在三天内退 款给您。','供应商'];
                    $wepay = controller('api/Wepay');
                    if(empty($visa_order['refund_on'])){
                        $refund_on = getCache('wechat')['mch_id'].date("YmdHis");
                        $r_map = ['refund_on'=>$refund_on,'refund_time'=>time()];
                        Db::table('ly_visa_order')->where($where)->update($r_map);
                    }else{
                        $refund_on = $visa_order['refund_on'];
                    }
                    $price = (int) ($visa_order['sumprice'] * 100);
                    $result_wepay = $wepay->refund('',$visa_order['onumber'],$price,$price,$refund_on);
//                    dump($result_wepay);exit;
                    if($result_wepay['return_code'] == 'SUCCESS' && $result_wepay['result_code'] == 'SUCCESS'){

                        model('bill')->qz_add_bill($visa_order);
                    }else{

                    }
                    $send_result = $aliyun->ajax_send($data);
                    Log::write('send log :'.json_encode($send_result,JSON_UNESCAPED_UNICODE));
                }

            }

            $this->success('编辑成功');
        }else{
            $this->error('编辑失败');

        }
    }
    // 签证材料集
    public function ajax_visa_data(){
        $where = ['v.mid'=>$this->merchant['id']];
        $visa_datas = $this->_visaData->getDatas($where,[],9999);
        $datas = json_decode(json_encode($visa_datas),true);
        return json_encode($datas['data']);
    }

}