<?php
namespace app\merchant\controller;

use app\merchant\controller\Base;
use think\Db;

class Orders extends Base
{
    private $_orders;
    private $_cart;

    protected function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->_orders = model('orders');
        $this->_cart = model('cart');
    }
    /*
     * 获取商品列表
     * */
    public function orderslist(){
        $where = ['mid'=>$this->merchant['id'],'sid'=>['neq','0']];
        $order = ['addtime'=>'desc'];
        if(!empty($_GET['status'])){
            $where['status'] = $_GET['status'];
        }
        if(!empty($_GET['refund'])){
            $where['refund_status'] = $_GET['refund'];
        }
        if(!empty($_GET['delivery'])){
            $where['delivery_status'] = $_GET['delivery'];
        }
        if(!empty($_GET['onumber'])){
            $where['onumber'] = ['like','%'.$_GET['onumber'].'%'];
        }
        $orderslists = $this->_orders->getList($where,$order,20);
        $page = $orderslists->render();
        $this->assign([
            'title' => '订单列表',
            'orderslists' => $orderslists,
            'page' => $page,
        ]);
        return $this->template();
    }
    // 修改订单
    public function order_edit(){
        $id = input('id');
        $where = ['id'=>$id];
        $order = $this->_orders->where($where)->find();
        $error = ['code'=>1];
        if(empty($order)){
            $error['code'] = 0;
            $error['info'] = '订单不存在';
            return $this->template();
        }
        $cart_where = ['oid'=>$id];
        $address = Db::name('address')->where(['id'=>$order['addressid']])->find();
        $goods = $this->_cart->getCarts($cart_where);
        $this->assign([
            'title' => '订单详情修改',
            'order' => $order,
            'goods' => $goods,
            'address' => $address
        ]);
        return $this->template();
    }
    // 修改订单操作
    public function edit(){
        $act = input('act');
        $map = [];
        if($act == 'price'){
            $map = ['sumprice'=>input('sumprice')];
        }elseif($act == 'send'){
            $map = [
                'logistics'=>input('logistics'),
                'waybillnum'=>input('waybillnum'),
                'delivery_status'    => '2'
            ];
        }
        $where = ['id'=>input('id')];
        if($this->_orders->save($map,$where)){
            $this->success('修改成功');
        }
        $this->error('修改失败');
    }
    //删除订单
    public function del(){
        $id = input('id');
        $where = ['id'=>$id];
        if($this->_orders->where($where)->delete()){
            $this->success('删除成功');
        }
        $this->error('删除失败');
    }
    // 店铺信息
    public function storeinfo(){
        $sid = input('sid');
        $where = ['mid'=>$this->merchant['id'],'id'=>$sid];
        $store = model('store')->where($where)->find();
        $this->assign([
            'title' => '店铺信息',
            'store' => $store,
//            'goods' => $goods
        ]);
        return $this->template();
    }
    public function userinfo(){
        $uid = input('uid');
        $where = ['id'=>$uid];
        $user = model('userinfo')->where($where)->find();
        $this->assign([
            'title' => '店铺信息',
            'user' => $user,
        ]);
        return $this->template();
    }
}