<?php

namespace app\merchant\controller;

use think\Controller;
use think\Cookie;
use think\Db;
use think\View;

class Base extends Controller
{
    protected $_merchant;
    protected $merchant;
    protected $theme;
    private $nolimit = [
        'Enroll'
    ];
    protected function _initialize(){
        parent::_initialize();  // TODO: Change the autogenerated stub
        $this->theme = config('template.theme');
        $this->_merchant = model('merchant');
        $this->checkLogin();
        $this->assigns();
    }
    /*
     * 判断用户是否登录
     * */
    private function checkLogin(){
        $url = current_url();
        $where['account'] = cookie('account');
        $where['passwd'] = cookie('passwd');
        if(strcmp(Cookie::get('check') , 'merchant') == 0 && !empty($where['account'])){
            $this->merchant = $this->_merchant->where($where)->find();
            if(empty($this->merchant)){
                $this->error('您操作的权限不够，请先登录！',url('Restrict/login').'?url='.$url);
            }
            $this->state($url);
            $this->merchant['aptitude'] = Db::name('aptitude')->where('mid',$this->merchant['id'])->find();
            cookie('account',$where['account']);
            cookie('passwd',$where['passwd']);
            cookie('check','merchant');
            return true;
        }
        $this->error('您操作的权限不够，请先登录！',url('Restrict/login').'?url='.$url);
    }
    /*
     * 判断商户状态情况
     * */
    private function state($url = ''){
        $controller = $this->request->controller();
//        dump($this->merchant['status']);
        if(!in_array($controller,$this->nolimit)){
            switch ($this->merchant['status']){
                case '0':
                    $reurl = $this->request->domain() . url('Enroll/aptitude');
                    $this->redirect($reurl);
                    //$info = '注册未提交材料';
                    break;
                case '1':
                    $reurl = $this->request->domain() . url('Enroll/wait_for');
                    $this->redirect($reurl);
                    //$info = '未审核';
                    break;
                case "2":
                    $info = '通过';
                    break;
                case "3":default:
                    $reurl = $this->request->domain() . url('Enroll/aptitude');
                    $this->redirect($reurl);
                    //$info = '不通过';
                    break;
            }
        }else{
            if($this->merchant['status'] == 2){
                $reurl = $this->request->domain() . url('Index/index');
                $this->redirect($reurl);
            }
        }
    }
    /*
     * 为模板赋必须值
     * */
    private function assigns(){
        $cache_config= getCache('basic');
        $trip_num = model('trip')->trip_num(['mid'=>$this->merchant['id']]);
        $shop_num = model('shop')->shop_num(['mid'=>$this->merchant['id']]);
        $this->assign([
            'merchant' => $this->merchant,
            'cache_config' => $cache_config,
            'trip_num' => $trip_num,
            'shop_num' => $shop_num,

        ]);
    }
    /*
     * 渲染输出
     * */
    protected function template($fetch = ''){

        $temp = '';
        if($this->theme != ''){
            $temp = $this->theme .'/';
        }
        return $this->view->config('view_path',__DIR__.'/../view/'.$temp)->fetch($fetch);
    }
}