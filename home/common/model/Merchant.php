<?php
namespace app\common\model;

use app\common\model\Base;
use think\Validate;

class Merchant extends Base
{
    private $_merchant ;

    protected function initialize(){
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->_merchant = $this;
        $this->_base = $this;
    }
    //获取商户列表
    public function merchantList(){
        
    }
    /*
     * 添加商户
     * */
    public function merchantAdd($map){
        $error = ['code'=>1];
        $result = $this->_merchant->validate(true)->save($map);
        if($result === false){
            $error['code'] = 0;
            $error['info'] = $this->_merchant->getError();
            return $error;
        }
        $error['key'] = $this->_merchant->id;
        return $error;
    }
    /*
     * 修改商户信息
     * */
    public function merchantMod($map,$id){
        $error = ['code'=>1];
        $result = $this->_merchant->validate('Merchant.mod')->save($map,['id'=>$id]);
        if($result === false){
            $error['code'] = 0;
            $error['info'] = $this->_merchant->getError();
            return $error;
        }
        return $error;
    }
    /*
     * 密码自动加密
     * */
    public function setPasswdAttr($value){
        return md5($value);
    }
    /*
     * 时间自动转为时间戳
     * */
    public function setExpireAttr($value){
        return strtotime($value);
    }
    /*
    * 验证用户登录用户名是否正确等
    * */
    public function checkMerchant($map){
        $error = ['code'=>1];
        $where = ['account'=>$map['account']];
        $exis = $this->getInfo($where);
        if($exis === false){
            $error['code'] = 0;
            $error['info'] = '用户不存在';
            return $error;
        }
        $where['passwd'] = md5($map['passwd']);
        if (strcmp($exis['passwd'],$where['passwd']) !== 0){
            $error['code'] = 0;
            $error['info'] = '账号与密码不匹配！';
            return $error;
        }
        cookie('account',$where['account']);
        cookie('passwd',$where['passwd']);
        cookie('check','merchant');
        return $error;
    }
    /*
     * 根据条件获取用户信息
     * */
    public function getInfo($where=['"1"'=>'1']){
        return $this->_merchant->where($where)->find();
    }


}