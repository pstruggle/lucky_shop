<?php
namespace app\common\model;

use app\common\model\Base;
use think\Db;

class Userinfo extends Base
{
    private $_user ;

    protected function initialize(){
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->_user = $this;
        $this->_base = $this;
    }
    /*
     * 检验用户是否注册微信注册  根据openID
     * */
    public function getUserinfo($where){
        return $this->_user->where($where)->find();
    }
    /*
     * 微信注册用户
     * */
    public function addUser($map){
        return $this->_user->insert($map);
    }
    // 用户登录验证
    public function checkUser($map){
        $error = ['code'=>1];
        $where = ['phone'=>$map['phone']];
        $exis = $this->getUserinfo($where);
        if($exis === false){
            $error['code'] = 0;
            $error['info'] = '用户不存在';
            return $error;
        }
        $where['passwd'] = md5($map['passwd']);
        if (strcmp($exis['passwd'],$where['passwd']) !== 0){
            $error['code'] = 0;
            $error['info'] = '账号与密码不匹配！';
            return $error;
        }
        cookie('phone',$where['phone']);
        cookie('passwd',$where['passwd']);
        cookie('check','user');
        return $error;
    }
    // 申请业务员列表
    public function applys($where = [],$order = [],$page = 20){
        $join = [
            ['apply a','a.uid = u.id']
        ];
        $field = ['u.*','a.status','a.phone','a.name'];
        return $this->_user
            ->alias('u')
            ->join($join)
            ->field($field)
            ->where($where)
            ->order($order)
            ->paginate($page);
    }
    public function stores($where = [],$order = [],$page = 20){
        $join = [
            ['store_apply s','s.uid = u.id']
        ];
        $field = ['u.*','s.status','s.phone','s.name'];
        return $this->_user
            ->alias('u')
            ->join($join)
            ->field($field)
            ->where($where)
            ->order($order)
            ->paginate($page);
    }
    public function getSexs(){
        $sexs = [];
        $where = ['sex' => 1];
        $sexs[] = $this->_user->where($where)->count();
        $where = ['sex' => 2];
        $sexs[] = $this->_user->where($where)->count();
        $where = ['sex' => ['notin','1,2']];
        $sexs[] = $this->_user->where($where)->count();
        return $sexs;
    }
    //业务员申请待处理数
    public function user_num($where=[]){
        $where = array_merge($where,['status'=>'1']);
        return Db::name('apply')->where($where)->count('id');
    }

}