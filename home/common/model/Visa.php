<?php
namespace app\common\model;

use app\common\model\Basely;
use think\Cookie;
use think\Db;

class Visa extends Basely
{
    private $_visa;
    private $_visaData;
    protected function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->_visa = $this;
        $this->_visaData = model('VisaData');
        $this->_base = $this;
    }
    // 获取签证列表
    public function getVisas($where = [], $order = [], $page = 20){
        $join = [
            [['ww_merchant'=> 'm'], 'm.id = v.mid']
        ];
        $field = ['v.*','m.name','m.phone'];
        return $this->_visa
            ->alias('v')
            ->join($join)
            ->field($field)
            ->where($where)
            ->order($order)
            ->paginate($page);
    }
    //获取单个行程
    public function getVisa($where){
        $visa = $this->_visa->where($where)->find();
        if(empty($visa)){
            return false;
        }
        $must = json_decode($visa['must'],true);
        if(!empty($must['id'])){
            $visa['must'] = $this->_visaData->where('id','in',$must['id'])->select();
        }
        $job = json_decode($visa['job'],true);
        if(!empty($job['id'])){
            $visa['job'] = $this->_visaData->where('id','in',$job['id'])->select();
        }
        $unjob = json_decode($visa['unjob'],true);
        if(!empty($unjob['id'])){
            $visa['unjob'] = $this->_visaData->where('id','in',$unjob['id'])->select();
        }
        $retire = json_decode($visa['retire'],true);
        if(!empty($retire['id'])){
            $visa['retire'] = $this->_visaData->where('id','in',$retire['id'])->select();
        }
        $student = json_decode($visa['student'],true);
        if(!empty($student['id'])){
            $visa['student'] = $this->_visaData->where('id','in',$student['id'])->select();
        }
        $child = json_decode($visa['child'],true);
        if(!empty($child['id'])){
            $visa['child'] = $this->_visaData->where('id','in',$child['id'])->select();
        }

        $visa['merchant'] = Db::table('ww_merchant')->where('id',$visa['mid'])->find();
        return $visa;
    }
    // 获取数据
    public function getMap($mid){
        $map = [
            'mid'=> $mid,
            'title'=> input('title')?input('title'):'',
            'dest_id'=> input('destination')?input('destination'):'',
            'dest'=> input('desttext')?input('desttext'):'',
            'balance'=> input('balance')?input('balance'):'',
            'sell'=> input('sell')?input('sell'):'',
            'type'=> input('type')?input('type'):'',
            'enter'=> input('enter')?input('enter'):'',
            'expiry'=> input('expiry')?input('expiry'):'',
            'stop'=> input('stop')?input('stop'):'',
            'handle'=> input('handle')?input('handle'):'',
            'interview'=> input('interview')?input('interview'):'',
            'fingerprint'=> input('fingerprint')?input('fingerprint'):'',
            'rem'=> input('rem')?input('rem'):'',
            'deposit'=> input('deposit')?input('deposit'):'',
            'notice'=> input('notice')?input('notice'):'',
            'scope'=> input('scope')?input('scope'):'',
            'service'=> input('service')?input('service'):'',
            'attention'=> input('attention')?input('attention'):'',
            'logistics'=> input('logistics')?input('logistics'):'',
            'status' => '1'
        ];
        $job = input('job/a')?input('job/a'):[];
        $map['job'] = json_encode($job,JSON_UNESCAPED_UNICODE);
        $unjob = input('unjob/a')?input('unjob/a'):[];
        $map['unjob'] = json_encode($unjob,JSON_UNESCAPED_UNICODE);
        $retire = input('retire/a')?input('retire/a'):[];
        $map['retire'] = json_encode($retire,JSON_UNESCAPED_UNICODE);
        $student = input('student/a')?input('student/a'):[];
        $map['student'] = json_encode($student,JSON_UNESCAPED_UNICODE);
        $must = input('must/a')?input('must/a'):[];
        $map['must'] = json_encode($must,JSON_UNESCAPED_UNICODE);
        $child = input('child/a')?input('child/a'):[];
        $map['child'] = json_encode($child,JSON_UNESCAPED_UNICODE);
        $pics = input('pics/a')?input('pics/a'):[];
        if(!empty($pics)){
            $map['pic'] = $pics[0];
            $map['pics'] = implode(',',$pics);
        }else{
            $map['pic'] = '';
            $map['pics'] = '';
        }
        return $map;

    }
}