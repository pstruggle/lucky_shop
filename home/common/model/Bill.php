<?php
namespace app\common\model;

use app\common\model\Base;
use think\Db;

class Bill extends Base
{
    private $_bill;
    protected function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->_bill = $this;
        $this->_base = $this;
    }
    //获取账单列表
    public function getBills($where=[],$order=[],$page=20){
        $bills = $this->_bill->where($where)->order($order)->paginate($page);
        foreach ($bills as $i =>$bill){
            $s_where = ['mid' => $bill['mid'],'id'=>$bill['sid']];
            $bills[$i]['sname'] = Db::name('store')->where($s_where)->value('store');
            $m_where = ['id'=>$bill['mid']];
            $bills[$i]['mname'] = Db::name('merchant')->where($m_where)->value('name');
        }
        return $bills;
    }
    // 获取账单详情
    public function getBill($where){
        $bill = $this->_bill->where($where)->find();
        if(empty($bill)){
            return false ;
        }
        $o_where = ['onumber'=>$bill['onumber']];
        if($bill['otype'] == '1'){
            $shop = model('shop')->getShops($o_where);
            if(count($shop) > 0){
                $shop[0]['offer'] = json_decode($shop[0]['offer'],true);
                $t_where = [ ['id'=>['in',$shop[0]['people'] ] ],['style'=>['in',$shop[0]['papers'] ] ] ];
                $shop[0]['travels'] = model('people')->peoples($t_where);
                $bill['order'] = $shop[0];
            }
        }elseif($bill['otype'] == '2'){
            $bill['order'] = Db::table('ww_orders')->where($o_where)->find();
        }elseif($bill['otype'] == '3'){
            $bill['order'] = Db::table('ly_ticket_order')->where($o_where)->find();
        }else{
            $bill['order'] = false;
        }
        return $bill;
    }
    //星期
    public function getWeekBill($where = [],$filed = ''){
        $times = get_week();
        $weeks = [];
        foreach ($times as $i => $time){
            $where['addtime'] = [];
            if(!empty($times[$i+1])){
                $where['addtime'][] = ['>',$time];
                $where['addtime'][] = ['<=',$times[$i+1]];

            }else{
                if($time){
                    $where['addtime'] = ['>',$time];
                }else{
                    $where['addtime'] = ['<',$time];
                }
            }
            $price = $this->_bill->where($where)->sum($filed);
            $weeks[] = $price ? $price : 0;
        }
        return $weeks;
    }
    // 行程创建账单
    public function add_bill($order){
        //旅游账单
        $where = ['mid'=>$order['mid']];
        $bill = Db::name('bill')->where($where)->order(['addtime'=>'desc'])->find();
        $now_balance = empty($bill['nowbalance']) ? 0 : $bill['nowbalance'];
        $take = getCache('take')['m_take'];
        if($order['offer_type'] == 2){
            $mer_give = 0;
            $peoples = explode(',',$order['peoples']);
            $offers = json_decode($order['offer'],true);
            foreach ($peoples as $k => $people){
                $mer_give -= $people * ($offers[$k]['balance'] - take_m($offers[$k]['balance'],$take));
            }
        }else{
            $mer_give = -($order['man']*($order['adult_balance'] - take_m($order['adult_balance'],$take)) + $order['child'] * ($order['child_balance'] - take_m($order['child_balance'],$take)));
        }
        $map = [
            'mid' => $order['mid'],
            'sid' => '',
            'uid' => $order['uid'],
            'onumber' => $order['onumber'],
            'otype' => '1',
            'odetails' => '拒绝用户订单'.$order['sumprice'],
            'sum' => $order['man']+$order['child'],
            'adult_balance' => !empty($order['adult_balance'])?$order['adult_balance']:'',
            'child_balance' => !empty($order['child_balance'])?$order['child_balance']:'',
            'recorded' => -$order['sumprice'],
            'mer_give' => $mer_give,
            'integration' => 0,
            'iconsume' => $order['use_integral'],
            'paytime' => time(),
            'nowbalance' => $now_balance + $mer_give,
            'take' => $take,
            'status' => '2',//不冻结
            'addtime' => time(),
        ];
        return $this->_bill->save($map);
    }
    // 用户购买行程产生账单
    public function shop_bill($order){
        //旅游账单
        $where = ['mid'=>$order['mid']];
        $bill = Db::name('bill')->where($where)->order(['addtime'=>'desc'])->find();
        $now_balance = empty($bill['nowbalance']) ? 0 : $bill['nowbalance'];
        $take = getCache('take')['m_take'];
        if($order['offer_type'] == 2){
            $mer_give = 0;
            $peoples = explode(',',$order['peoples']);
            $offers = json_decode($order['offer'],true);
            foreach ($peoples as $k => $people){
                $mer_give += $people * ($offers[$k]['balance'] - take_m($offers[$k]['balance'],$take));
            }
        }else{
            $mer_give = ($order['man']*($order['adult_balance'] - take_m($order['adult_balance'],$take)) + $order['child'] * ($order['child_balance'] - take_m($order['child_balance'],$take)));
        }
        $map = [
            'mid' => $order['mid'],
            'sid' => '',
            'uid' => $order['uid'],
            'onumber' => $order['onumber'],
            'otype' => '1',
            'odetails' => '用户消费进账'.$order['sumprice'],
            'sum' => $order['man']+$order['child'],
            'adult_balance' => !empty($order['adult_balance'])?$order['adult_balance']:'',
            'child_balance' => !empty($order['child_balance'])?$order['child_balance']:'',
            'recorded' => -$order['sumprice'],
            'mer_give' => $mer_give,
            'integration' => 0,
            'iconsume' => $order['use_integral'],
            'paytime' => time(),
            'nowbalance' => $now_balance + $mer_give,
            'take' => $take,
            'status' => '2',//不冻结
            'addtime' => time(),
        ];
        return $this->_bill->save($map);
    }

    // 门票创建账单
    public function mp_add_bill($order){
        $where = ['mid'=>$order['mid']];
        $bill = Db::name('bill')->where($where)->order(['addtime'=>'desc'])->find();
        $now_balance = empty($bill['nowbalance']) ? 0 : $bill['nowbalance'];
        $take = getCache('take')['m_take'];
        $mer_give = -($order['sum']*($order['unit_price'] - take_m($order['unit_price'],$take))) ;
        $map = [
            'mid' => $order['mid'],
            'sid' => '',
            'uid' => $order['uid'],
            'onumber' => $order['onumber'],
            'otype' => '3',
            'odetails' => '拒绝用户订单'.$order['discount'],
            'sum' => $order['sum'],
            'recorded' => -$order['discount'],
            'mer_give' => $mer_give,
            'integration' => 0,
            'iconsume' => '0',
            'paytime' => time(),
            'nowbalance' => $now_balance + $mer_give,
            'take' => $take,
            'status' => '2',//不冻结
            'addtime' => time(),
        ];
        return $this->_bill->save($map);
    }
    // 签证创建订单
    public function qz_add_bill($order){
        $where = ['mid'=>$order['mid']];
        $bill = Db::name('bill')->where($where)->order(['addtime'=>'desc'])->find();
        $now_balance = empty($bill['nowbalance']) ? 0 : $bill['nowbalance'];
        $take = getCache('take')['m_take'];
        $mer_give = -($order['num']*($order['sell'] - take_m($order['sell'],$take))) - $order['logistics'] ;
        $map = [
            'mid' => $order['mid'],
            'sid' => '',
            'uid' => $order['uid'],
            'onumber' => $order['onumber'],
            'otype' => '4',
            'odetails' => '拒绝用户订单'.$order['sumprice'],
            'sum' => $order['num'],
            'recorded' => -$order['sumprice'],
            'mer_give' => $mer_give,
            'integration' => 0,
            'iconsume' => '0',
            'paytime' => time(),
            'nowbalance' => $now_balance + $mer_give,
            'take' => $take,
            'status' => '2',//不冻结
            'addtime' => time(),
        ];
        return $this->_bill->save($map);
    }
    // 提款
    public function tk_add_bill($mid,$price){
        $where = ['mid'=>$mid];
        $bill = Db::name('bill')->where($where)->order(['addtime'=>'desc'])->find();
        $now_balance = empty($bill['nowbalance']) ? 0 : $bill['nowbalance'];
        $take = getCache('take')['m_take'];
        $mer_give = -$price ;
        $map = [
            'mid' => $mid,
            'sid' => '',
            'uid' => 0,
            'onumber' => serial(),
            'otype' => '9',
            'odetails' => '商户提款'. $mer_give,
            'sum' => 0,
            'recorded' => 0,
            'mer_give' => $mer_give,
            'integration' => 0,
            'iconsume' => '0',
            'paytime' => time(),
            'nowbalance' => $now_balance + $mer_give,
            'take' => $take,
            'status' => '2',//不冻结
            'addtime' => time(),
        ];
        return $this->_bill->save($map);
    }

}