<?php
namespace app\common\model;

use app\common\model\Base;
use think\Db;
use think\Loader;
use think\Model;

class Get extends Base
{
    private $_get;

    protected function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->_get = $this;
        $this->_base = $this;
    }
    public function getGets($where=[],$order=[],$page = 20){
        $join = [
            ['userinfo u','u.id=g.uid'],
        ];
        $field = ['g.*','u.nickname'];
        return $this->_get
            ->alias('g')
            ->join($join)
            ->field($field)
            ->where($where)
            ->order($order)
            ->paginate($page);
    }
    //为上级添加
    public function upper($order,$attach){
        $uid = $order['uid'];
        $user = Db::name('userinfo')->where('id',$uid)->find();
        if(empty($user)){
            return false ;
        }
//        if($order['addtime']< strtotime('2017-08-01')){
//            return false ;
//        }
        switch ($attach){
            case 'ly' :
                $offer = json_decode($order['offer'],true);
                $take = getCache('take')['salesman_take']-getCache('take')['core_take'];
                $price = ( $order['man']*( $offer['adult'] - $offer['adult_balance'] )  + $order['child'] * ( $offer['children'] - $offer['child_balance'] ) ) * $take / 100;
                $get = $this->_get->where('puid',$user['puid'])->order('addtime','desc')->find();
                $sum = empty($get) ? $price : $get['sum'] + $price ;
                $map = [
                    'uid' => $user['id'],
                    'puid' => $user['puid'],
                    'oid' => $order['id'],
                    'price' => $price,
                    'sum' => $sum,
                    'type' => 1,
                    'addtime' => time()
                ];
                break ;
            case 'mp' :
                $offer = json_decode($order['offer'],true);
                $take = getCache('take')['salesman_take']-getCache('take')['core_take'];
                $price = $order['sum'] * ($offer['market']-$offer['discount']) * $take / 100;
                $get = $this->_get->where('puid',$user['puid'])->order('addtime','desc')->find();
                $sum = empty($get) ? $price : $get['sum'] + $price ;
                $map = [
                    'uid' => $user['id'],
                    'puid' => $user['puid'],
                    'oid' => $order['id'],
                    'price' => $price,
                    'sum' => $sum,
                    'type' => 2,
                    'addtime' => time()
                ];
                break;
            case 'qz' :
                $offer = json_decode($order['offer'],true);
                $take = getCache('take')['salesman_take']-getCache('take')['core_take'];
                $price = $order['sum'] * ($offer['market']-$offer['discount']) * $take / 100;
                $get = $this->_get->where('puid',$user['puid'])->order('addtime','desc')->find();
                $sum = empty($get) ? $price : $get['sum'] + $price ;
                $map = [
                    'uid' => $user['id'],
                    'puid' => $user['puid'],
                    'oid' => $order['id'],
                    'price' => $price,
                    'sum' => $sum,
                    'type' => 2,
                    'addtime' => time()
                ];
                break;
            default:
                $map = [];
                break;
        }
        return Db::table('ww_get')->insert($map);
    }
}