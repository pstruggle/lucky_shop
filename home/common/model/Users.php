<?php
namespace app\common\model;

use app\common\model\Base;
use think\Db;
use think\Request;

class Users extends Base
{
    private $_user ;
    protected function initialize(){
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->_user = $this;
        $this->_base = $this;
    }
    /**
     * 用户注册
     */
    public function register($data){
        $error = ['code'=>0,'info'=>'注册成功'];
        dump($data['check_code']);
        if(!captcha_check($data['check_code'])){
            $error['code'] = 1;
            $error['info'] = '验证码不正确';
            return $error;
        }
        $data['regdate'] = time();

        switch ($data['reg_type']){
            case 'email': // 邮箱注册
                $result = $this->email($data);
                break;
            case 'phone': // 手机号码注册
                $result = $this->phone($data);
                break;
            case 'nickname': // 昵称注册
                $result = $this->nickname($data);
                break;
            default:
                $result = ['code'=>1,'info'=>'请求出错'];
                break;
        }
        return $result;
    }
    /**
     * 昵称注册
     */
    public function nickname($data){
        $error = ['code'=>1];
        $user = $this->where('nickname',$data['nickname'])->find();
        if(!empty($user)){
            $error['info'] = '该用户名存在';
            return $error;
        }
        if(strcmp($data['passwd'],$data['passwd_verify']) !== 0){
            $error['info'] = '您输入的密码不一致';
            return $error;
        }
        $map=[
            'nickname' => $data['nickname'],
            'passwd' => $data['passwd'],
            'regip' => $data['regip'],
            'regdate' => $data['regdate'],
            'status' => 1, // 状态为正常状态
        ];
        $save = $this->validate('Users.nickname')->save($map);
        if($save === false){
            $error['info'] = $this->getError();
            return $error;
        }
        $error['code'] = 0;
        $error['info']='注册成功，快去登录吧...';
        return $error;
    }

    /**
     * 电话号码注册
     */
    public function phone($data){
        $error = ['code'=>1];
        $user = $this->where('phone',$data['phone'])->find();
        if(!empty($user)){
            $error['info'] = '该手机号码已经注册';
            return $error;
        }
        if(strcmp($data['passwd'],$data['passwd_verify']) !== 0){
            $error['info'] = '您输入的密码不一致';
            return $error;
        }
        $map=[
            'phone' => $data['phone'],
            'passwd' => $data['passwd'],
            'regip' => $data['regip'],
            'regdate' => $data['regdate'],
            'status' => 1, // 状态为正常状态
        ];
        $save = $this->validate('Users.phone')->save($map);
        if($save === false){
            $error['info'] = $this->getError();
            return $error;
        }
        $error['code'] = 0;
        $error['info']='注册成功，快去登录吧...';
        return $error;
    }

    /**
     * 邮箱注册
     */
    private function email($data){
        $error = ['code'=>1];
        $user = $this->where('email',$data['email'])->find();
        if(!empty($user)){
            $error['info'] = '该邮箱已经注册';
            return $error;
        }
        if(strcmp($data['passwd'],$data['passwd_verify']) !== 0){
            $error['info'] = '您输入的密码不一致';
            return $error;
        }
        $map=[
            'email' => $data['email'],
            'passwd' => $data['passwd'],
            'regip' => $data['regip'],
            'regdate' => $data['regdate'],
            'status' => 1, // 状态为正常状态
        ];
        $save = $this->validate('Users.mail')->save($map);
        if($save === false){
            $error['info'] = $this->getError();
            return $error;
        }
        $result = $this->body($data['email'],$data['passwd'],$data['domain']);
        if($result['errorCode']){
            $error['code'] = 0;
            $error['info']='邮箱注册成功,赶紧去邮箱验证吧...';
            return $error;
        }else{
            $error['info'] = '服务器繁忙，邮件发送失败，请稍后再试...';
            return $error;

        }
    }
    // 邮件内容字符串
    private function body($email,$passwd,$domain){
        $mall_name = get_cache('config.mall')['mall_name'];

        $key = get_cache('config.basic')['encrypt_key'];
        $passwd_en = md5($passwd);
        $code = $email . '!_!' . $passwd_en;
        $checkcode = authcode($code,$key,'E',48*60*60);
        $url = $domain . url('restrict/Index/mailprove') . '?checkcode='.urlencode($checkcode);
        $body = "<div><span class=\"genEmailNicker\"></span><br><span class=\"genEmailContent\"><br>尊敬的用户 ：<br><br>&nbsp;&nbsp; &nbsp; &nbsp; 您好！恭喜您注册成为{$mall_name}。<br><br>&nbsp;&nbsp; &nbsp; &nbsp; 这是一封注册认证邮件，请点击以下链接确认：<br>&nbsp;&nbsp; &nbsp; &nbsp; <a href=\"{$url}\" target=\"_blank\">{$url}</a> <br><br>&nbsp;&nbsp; &nbsp; &nbsp; 如果链接不能点击，请复制地址到浏览器，然后直接打开。<br><br>&nbsp;&nbsp; &nbsp; &nbsp; 上述链接48小时内有效。如果激活链接失效，请您登录网站<a target=\"_blank\" href=\"{$domain}\"> {$domain}</a>重新申请认证。<br><br>&nbsp;&nbsp; &nbsp; &nbsp; 感谢您注册%s！<br><br>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; {$mall_name}项目组<br><br>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; <span style=\"border-bottom:1px dashed #ccc;\" t=\"5\" times=\"\">{$mall_name}</span></span><br><span class=\"genEmailTail\"></span></div>";
        $result = send_mail($email,$email,$mall_name.'-注册认证',$body);
        return $result;
    }
    /**
     * 自动加密密码
     */
    public function setPasswdAttr($value){
        $key = get_cache('config.basic')['encrypt_key'];
        return md5($value);
    }
}