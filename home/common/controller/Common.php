<?php
namespace app\common\controller;

use think\Controller;
use think\Cookie;


class Common extends Controller
{
    protected $theme; // 主题控制
    protected $request; // 请求类初始化
    protected $module; //当前请求模块
    protected $controller; //当前请求控制器
    protected $action; //当前请求方法
    protected function _initialize(){
        parent::_initialize();  // TODO: Change the autogenerated stub
        $this->theme = 'appui';
        $this->module = $this->request->module(); // 获取模块
        $this->controller = $this->request->controller(); // 获取控制器
        $this->action = $this->request->action(); // 获取方法
    }
    /*
     * 判断用户是否登录
     * */
    private function checkLogin(){
        $url = current_url();
        $where['account'] = cookie('account');
        $where['passwd'] = cookie('passwd');
        if(Cookie::get('check') == 'admin' && !empty($where['account'])){
            $this->admininfo = $this->_admin->getInfo($where);
            if(empty($this->admininfo)){
                $this->error('您操作的权限不够，请先登录！',url('Restrict/login').'?url='.$url);
            }
            cookie('account',$where['account']);
            cookie('passwd',$where['passwd']);
            cookie('check','admin');
            return true;
        }
        $this->error('您操作的权限不够，请先登录！',url('Restrict/login').'?url='.$url);
    }
    protected function record_user($user){
        $key = get_cache('config.basic')['encrypt_key'];
        $id = authcode($user['id'],$key);
        $secret = authcode($user['passwd'],$key);
        Cookie::set('token',$id);
        Cookie::set('secret',$secret);
    }

    /**
     * 渲染输出
     * @param string $fetch 显示模板
     */
    protected function template($fetch = ''){

        $temp = '';
        if($this->theme != ''){
            $temp .= $this->theme .'/';
        }
        if(!empty($this->module)){
            $temp .= $this->module .'/';
        }
        return $this->view->config('view_path',__DIR__.'/../view/'.$temp)->fetch($fetch);
    }
    /**
     * 获取跳转到当前页的地址
     */
    protected function last_url(){
        return $_SERVER["HTTP_REFERER"];
    }
    /**
     * 跳转到上一页
     */
    protected function last_redirect(){
        return $this->redirect($this->last_url());
    }



}