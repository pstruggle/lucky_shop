<?php
namespace app\index\controller;
use app\index\controller\Base;
use think\Cookie;
use think\Db;

class Index extends Base
{
    private $wechat;
    private $_ad;
    private $_nav;
    private $_offer;
    private $_line;
    private $_trip;
    private $_shop;
    protected function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->_ad = model('ad');
        $this->_nav = model('nav');
        $this->_offer = model('offer');
        $this->_line = model('line');
        $this->_trip = model('trip');
        $this->_shop = model('shop');
    }
    //首页
    public function index()
    {
        $this->assign([
            'title' => '小惠猫-旅游首页',

        ]);
        return $this->template();
    }
    public function test(){
        $a = [[0,1,2,3], [1,2,3,4]];
        echo '<script>console.log('.json_encode($a).');</script>';
        echo json_encode($a);
    }
    //高级搜索
    public function advanced(){
        $this->assign([
            'title' => '小惠猫-旅游高级搜索',
        ]);
        return $this->template();

    }
    // 行程列表
    public function trip_list(){
        $url = current_url();
        $url_info = parse_url($url);
        if(!empty($url_info['query'])){
            $where = $url_info['query'];
        }
        if(input('pro_type')){
            $where = "pro_type=".input('pro_type');
        }
//        $trips = $this->_trip->where($where)->select();
        $this->assign([
            'title' => '小惠猫-旅游行程列表',
            'where' => $where
        ]);
        return $this->template();
    }
    //行程详情
    public function details(){
        $trip = $this->_trip->getTrip();
//        dump($trip);
        if(empty($trip)){
            $this->error('行程不存在',url('Index/index'));
        }
        if($this->userinfos['type'] == '1'){
            $op = Db::table('ww_userinfo')->where('id',$this->userinfos['op'])->find();
            $this->assign('op',$op);
        }
        if($this->userinfos['id'] == 16){
//            dump($trip);
        }
        $this->assign([
            'title' => !empty($trip['title'])?$trip['title']:'小惠猫-旅游行程详情',
            'trip' => $trip,
        ]);
        return $this->template();
    }
    //我的位置
    public function location(){
        $this->assign([
            'title' => '我的位置',
        ]);

        return $this->template();
    }
    // 普通搜索
    public function search(){
        $this->assign([
            'title' => '关键字搜索',
        ]);
        return $this->template();

    }
    //异步获取行程数据
    public function ajax_trips(){
        $where = $this->_trip->getWhere();
        $otype = input('otype');
        $order = [];
        switch ($otype){
            case '1':default:
                break;
            case '2':
                $order = ['t.maxprice'=>'asc'];
                break;
            case '3':
                $order = ['t.maxprice'=>'desc'];
                break;
        }
        $trips = $this->_trip->getTrips($where,$order);
        $this->assign('trips',$trips);
        return $this->template();
    }
    //开始预订
    public function pricecalendar(){
        $trip = $this->_trip->getTrip();
        $this->assign([
            'title' => '开始预订',
            'trip' => $trip,
        ]);
        return $this->template();
    }
    // 选择支付方式
    public function order_pay(){
        $oid  = input('oid');
        $s_where = ['id'=>$oid,'uid'=>$this->userinfos['id']];
        $shop = Db::table('ly_shop')->where($s_where)->find();
        $this->assign([
            'title'=>'选择支付方式',
            'shop'=>$shop,
            'oid'=>$oid,
        ]);
        return $this->template();
    }
    public function pay(){
        $oid = input('oid');
        $type = input('type');
        $pay = input('pay');
        switch ($pay){
            case '1' :
                //微信支付
//                $url = urlencode(url('Mall/cart'));
                $redurl = $this->request->domain().'/api.php/wepay/wxpay.html?oid='.$oid.'&type='.$type;

                $this->redirect($redurl);
                break;
        }
    }
    // 确认订单
    public function confirm(){
        $trip = null ;
        $man = 0;
        $child = 0;
        $map = [];
        if(input('dates')){
            $dates = input('dates')?input('dates'):''; //时间
            $map['outtime'] = strtotime($dates);
            $this->assign('dates',$dates);
        }
        if(input('man')){
            $man = input('man')?input('man'):'0';
            $map['man'] = $man;
            $this->assign('man',$man);
        }
        if(input('child')){
            $child = input('child')?input('child'):'0';
            $map['child'] = $child;
            $this->assign('child',$child);
        }
        $trip = $this->_trip->getTrip();
        if($trip){
            if($trip['issafe']){
                $safes = Db::table('ly_safe')->where(['id'=>['in',$trip['safe']]])->select();
                $this->assign('safes',$safes);
            }
            $offer = json_decode($trip['offer'],true);
            $dateStr = date('Ymd',$map['outtime']);
            $map['tid'] = $trip['id'];
            if($trip['offer_type'] == '2'){
                $po = input('po/a')?input('po/a'):'';
                if(empty($po)){
                    return $this->error('没有出行人数');
                }
                $map['peoples'] = implode(',',$po);
                $this->assign('peoples',$map['peoples']);
            }else{
                $map['adult_balance'] = $offer[$dateStr]['adult_balance'];
                $map['child_balance'] = $offer[$dateStr]['children_balance'];
            }

            $map['offer_type'] = $trip['offer_type'];
            $map['offer'] = json_encode($offer[$dateStr]);
            $map['mid'] = $trip['mid'];
            $map['uid'] = $this->userinfos['id'];
            Db::table('ly_shop')->insert($map);
            $shopid = Db::table('ly_shop')->getLastInsID('id');
            $this->assign('shopid',$shopid);
        }
        $this->assign([
            'title' => '确认行程',
            'trip' => $trip,
        ]);
        return $this->template();
    }
    // 订单填写
    public function order(){
        $shopid = input('shopid');
        $shop = Db::table('ly_shop')->where(['id'=>$shopid,'uid'=>$this->userinfos['id']])->find();
        if($shop){
            // 查询行程
            $where = ['id' => $shop['tid'],'status'=>2];
            $trip = $this->_trip->where($where)->find();
            // 更新保险
            $safes = input('safes');
            if($safes){
                $map = [];
                $map['safes'] = trim($safes,',');
                $s_where = ['id'=>$shop['id']];
                Db::table('ly_shop')->where($s_where)->update($map);
            }
            $contracts = Db::table('ly_contract')->where(['uid'=>$this->userinfos['id'],'oid'=>$shopid])->select();
            if(count($contracts)<=0){
                $contracts = Db::table('ly_contract')->where(['uid'=>$this->userinfos['id'],'status'=>'0','type'=>$trip['type']])->select();
            }else{
                $this->assign('cid',true);
            }
            $this->assign('contracts',$contracts);

            // 查询商户
            $m_where = ['id'=>$trip['mid']];
            $merchant = Db::name('merchant')->where($m_where)->find();
            //查询出行人
            $p_where = ['id'=>['in',$shop['people']],'uid'=>$this->userinfos['id']];
            $peoples = Db::table('ly_people')->where($p_where)->select();
            $this->assign([
                'title' => '订单填写',
                'merchant' => $merchant,
                'shop'=>$shop,
                'trip' => $trip,
                'peoples' => $peoples
            ]);
            return $this->template();
        }else{
            return $this->error('操作错误');
        }
    }
    // 出行人列表信息
    public function passengerselect(){
        $shopid = input('shopid');
        $shop = Db::table('ly_shop')->where(['id'=>$shopid,'uid'=>$this->userinfos['id']])->find();
        if($shop){
            $upeoples = Db::table('ly_people')->where(['uid'=>$this->userinfos['id']])->select();
            $this->assign([
                'title' => '订单填写',
                'shop'=>$shop,
                'upeoples' => $upeoples
            ]);
            return $this->template();
        }else{
            return $this->error('操作错误');
        }
    }
    //判断出行人的证件是否齐全
    public function judge_paper(){
        $tid = input('tid');
        $pid = input('pid');
        $error = ['code'=>'0','info'=>'证件齐全'];
        $t_where = ['id'=>$tid];
        $papers = $this->_trip->where($t_where)->value('papers');
        $p_where =['pid'=>$pid,'style'=>['in', $papers]];
        $passports = Db::table('ly_passport')->where($p_where)->column('style');
        $papers = explode(',', $papers);
        $ps = [];
        foreach ($papers as $paper){
            if (!in_array($paper,$passports)){
                $ps[] = $paper;
            }
        }
        if(!empty($ps)){
            $ps = implode(',', $ps);
            $pe_where = ['id'=>['in',$ps]];
            $pas = Db::table('ly_paper')->where($pe_where)->column('paper_name');
            $pas = implode(',',$pas);
            $error['code'] = '1';
            $error['info'] = $pas;
        }
        return json_encode($error);
//        echo json_encode($passports);
    }
    //编辑乘客信息的页面
    public function passengeredit(){
        $passid = input('passid');
        $act = 'add';
        $passeng = Db::table('ly_people')->where(['id'=>$passid,'uid'=>$this->userinfos['id']])->find();
        $url = $_SERVER['HTTP_REFERER'];
        if($passeng){
            $act = 'update';
            $this->assign([
                'passeng' => $passeng,
            ]);
        }
        $papers = Db::table('ly_paper')->select();
        $this->assign([
            'title' => '添加修改填写',
            'act' => $act,
            'url' => $url,
            'papers' => $papers,
        ]);
        return $this->template();
    }
    //异步获取数据
    public function passports(){
        $type = input('type');
        $pid = input('pid');
        $passport = Db::table('ly_passport')->where(['pid'=>$pid,'style'=>$type])->find();
        if($passport){
            $passport['handle'] = date('Y-m-d',$passport['handle']);
            $passport['expir_in'] = date('Y-m-d',$passport['expir_in']);
            return json_encode($passport);
        }else{
            return '';
        }
    }
    // 旅游合同的展示
    public function order_contract(){
        $id = input('id');
        $contract = Db::table('ly_contract')->where(['id'=>$id])->find();
        $this->assign([
            'title' => '旅游合同',
            'contract' => $contract
        ]);
        return $this->template();

    }

    // 编辑乘客信息的编辑操作
    public function passenger_edit(){
        $papers = ['idcard',''];
        $act = input('act');
        $url = input('from');

        $map = [
            'uid'=>$this->userinfos['id'],
            'name'=>input('name'),
            'last'=>input('last'),
            'first'=>input('first'),
            'sex' => input('sex'),
            'birthday' => strtotime(input('dates')),
            'china_phone'=> input('phone'),
            'nationality'=> input('county'),
        ];
        switch ($act){
            case 'add':
                $map['addtime'] = time();
                $result = Db::table('ly_people')->insert($map);
                $pid = Db::table('ly_people')->getLastInsID();
                break;
            case 'update':
                $where = ['id'=>input('passid'),'uid'=>$this->userinfos['id']];
                $result = Db::table('ly_people')->where($where)->update($map);
                $pid = $where['id'];
                break;
            default :
                $result = 0;
        }
        $p_map = [
            'pid' => $pid,
            'style' => input('type'),
            'paper_name' => Db::table('ly_paper')->where(['id'=>input('type')])->value('paper_name'),
            'idnumber' => input('idcard'),
            'handle' => strtotime(input('handle')),
            'expir_in' => strtotime(input('expir_in')),
            'addtime' => time()
        ];
        $where_p = ['pid'=>$pid,'style'=>input('type')];
        $result_p = Db::table('ly_passport')->where($where_p)->find();
        if($result_p){
            $p_result = Db::table('ly_passport')->where($where_p)->update($p_map);
        }else{
            $p_result = Db::table('ly_passport')->insert($p_map);
        }
        if($result || $p_result){
            $this->redirect($url);
        }else{
            $this->error('没有更改',$url);
        }
    }
    //异步修改订单
    public function ajax_shop(){
        $where = ['id'=>input('shopid'),"uid"=>$this->userinfos['id']];
        $map = [];
        $ids = input('ids');
        $price = input('price');
        if($ids){
            $map['people'] = trim($ids,',');
        }
        if($price){
            $map['sumprice'] = $price;
//            $tid= Db::table('ly_shop')->where($where)->value('tid');
//            $earnest = $this->_trip->where(['id'=>$tid])->value('earnest');
//            $map['earnest'] =$earnest;
        }
        if(input('name')){
            $map['contact_name'] = input('name');
        }
        if(input('phone')){
            $map['contact_phone'] = input('phone');
        }
        if(input('email')){
            $map['contact_email'] = input('email');
        }
        if(input('contract')){
            $c_where = ['id'=>input('contract')];
            $c_map = [
                'oid' =>input('shopid'),
                'price' => input('contract_price'),
                'status' => 1,
                'usetime' => time(),
            ];
            Db::table('ly_contract')->where($c_where)->update($c_map);
        }
        if(input('remark')){
            $map['remark'] = input('remark');
        }
        if(input('act') && input('act') == 'order'){
            $map['onumber'] = serial();
            $map['pay_status'] = 1;
            $map['addtime'] = time();
        }
        return Db::table('ly_shop')->where($where)->update($map);
    }
    //order_list 旅游订单
    public function order_list(){
        $this->assign([
            'title' => '订单列表',
        ]);
        return $this->template();
    }
    // ajax_order 异步获取旅游订单
    public function ajax_order(){
        $type = input('type');
        $where = ['uid'=>$this->userinfos['id']];
        switch ($type){
            case '0':
                $where['pay_status'] = ['notin','0'];
                //所有订单
                break;
            case '1':
                $where['pay_status'] = '1';
                break;
            case '2':
                $where['pay_status'] = '2';
                $where['confirm'] = '1';
                break;
            case '3':
                $where['pay_status'] = '2';
                $where['confirm'] = '2';
                break;
            default :
                $where['pay_status'] = ['notin','0'];
                break;

        }
        $order = ['s.addtime'=>'desc'];
        $orders = $this->_shop->getShops($where,$order);
        $this->assign('orders',$orders);
        return $this->template();
    }
    // 删除订单
    public function order_del(){
        $oid = input('shopid');
        $where = ['id' => $oid, 'uid' => $this->userinfos['id'], 'pay_status'=>['in','0,1']];
//        $map = ['del'=>1];
        $result = $this->_shop->where($where)->delete();
        if($result){
            $this->success('删除成功!',url('Index/order_list'));
        }else{
            $this->error('删除失败!',url('Index/order_list'));

        }
    }
    // 订单评论
    public function comment(){
        $oid = input('oid');
        $type = input('type');
        $orders = null;
        switch ($type){
            case '0': // 商城
                break;
            case '1': // 旅游
                $where = ['s.id'=>$oid,'uid'=>$this->userinfos['id']];
                $orders = $this->_shop->getShops($where);
                if(count($orders)<=0){
                    return $this->error('没有找到订单');
                }else{
                    $order = $orders[0];
                    if($order['iscom'] ==1){
                        return $this->error('该订单已经评论');
                    }
                }
                break;
            case '2': // 门票
                break;
            case '3': // 签证
                break;
        }
        $this->assign([
            'orders'=>$orders,
            'title'=>'订单评论'
        ]);
        return $this->template();
    }
    //评论列表
    public function comment_list(){
        $tid = input('tid');
        $c_where = ['c.gid'=>$tid,'c.type'=>'1'];
        $score = model('comment')->getComment($c_where);
        $score['good'] = model('comment')->where(['gid'=>$tid,'type'=>'1','star'=>1])->count();
        $this->assign([
            'title'=>'评论列表',
            'score'=>$score
        ]);
        return $this->template();
    }
    // 异步获取评论
    public function ajax_comment(){
        $where = ['c.gid'=>input('tid'),'c.type'=>'1'];
        $order = ['c.addtime'=>'desc'];
        $comments = model('comment')->getComments($where,$order);
        $this->assign([
            'comments'=>$comments
        ]);
        return $this->template();
    }
    // 评论操作
    public function comment_edit(){
        $oid = input('oid');
        $type = input('type')?input('type'):'';
        $where = ['uid'=>$this->userinfos['id']];
        $map = [
            'oid'=>$oid,
            'uid'=>$this->userinfos['id'],
            'content'=>input('common')?input('common'):'',
            'star'=>input('star')?input('star'):'',
            'score'=>input('score')?input('score'):'',
            'guide'=>input('guide')?input('guide'):'',
            'scheduling'=>input('scheduling')?input('scheduling'):'',
            'type'=>$type,
            'addtime'=>time()
        ];

        switch ($type){
            case '0': // 商城
                break;
            case '1': // 旅游
                $where['s.id']=$oid;
                $orders = $this->_shop->getShops($where);
                if(count($orders)<=0){
                    return $this->error('没有找到订单');
                }else{
                    $order = $orders[0];
                    if($order['iscom'] ==1){
                        return $this->error('该订单已经评论');
                    }
                    $u_where = ['id'=>$oid,'uid'=>$this->userinfos['id']];
                    $u_result = $this->_shop->where($u_where)->update(['iscom'=>'1']);
                }
                $map['mid'] = $order['mid'];
                $map['gid'] = $order['tid'];
                break;
            case '2': // 门票
                break;
            case '3': // 签证
                break;
        }
        $result = Db::table('ww_comment')->insert($map);
        if($result){
            return $this->success('评论成功','Index/order_list');
        }else{
            return $this->error('评论失败');
        }
    }
    // 单页海报列表
    public function poster(){
        $url = current_url();
        $url_info = parse_url($url);
        if(!empty($url_info['query'])){
            $where = $url_info['query'];
        }
        $where .= "&poster=1";
//        $trips = $this->_trip->where($where)->select();
        $this->assign([
            'title' => '小惠猫-旅游行程列表',
            'where' => $where
        ]);
        return $this->template();
    }
    // 异步获取
    public function ajax_poster(){
        $where = $this->_trip->getWhere();
        $otype = input('otype');
        $order = [];
        switch ($otype){
            case '1':default:
            break;
            case '2':
                $order = ['t.maxprice'=>'asc'];
                break;
            case '3':
                $order = ['t.maxprice'=>'desc'];
                break;
        }
        $trips = $this->_trip->getTrips($where,$order,5);
        $this->assign('trips',$trips);
        return $this->template();
    }
}

