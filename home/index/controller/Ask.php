<?php
namespace app\index\controller;
use app\index\controller\Base;
use think\Cookie;
use think\Db;

class Ask extends Base
{
    private $_ask_temp;
    private $_ask_type;
    private $_publish;
    private $_message;

    protected function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->_ask_type = model('askType');
        $this->_ask_temp = model('askTemp');
        $this->_publish = model('publish');
        $this->_message = model('message');
        if($this->userinfos['type'] != '1'){
            $this->error('快来申请成为我们的旅游顾问吧！');
        }
    }
    // 用户发布列表
    public function publish_list(){
        $ask_types = $this->_ask_type->select(); //问价类型
        $ask_temps = $this->_ask_temp->getTemps(); //问价模板
        $ask_temps = json_encode($ask_temps);
        $this->assign([
            'title'=>'发布列表',
            'ask_types'=>$ask_types,
            'ask_temps' => $ask_temps
        ]);
        return $this->template();
    }
    // 用户选择后发布页面
    public function publisn(){
        $temp = input('temp');
        $type = input('type');
        $ask_temp = $this->_ask_temp->where(['id'=>$temp])->find();
        $ask_type = $this->_ask_type->where(['id'=>$type])->find();
        if(empty($temp)){
            $this->error('模板不存在');
        }
        if(empty($type)){
            $this->error('模板分类不存在');
        }
        $inputs = $this->_ask_temp->getInput($ask_temp['input']);
        $this->assign([
            'title'=>'发布列表',
            'ask_temp'=>$ask_temp,
            'ask_type'=>$ask_type,
            'inputs'=>$inputs,
        ]);
        return $this->template();

    }
    // 异步获取列表
    public function ajax_publisn(){
        $order = ['p.addtime'=>'desc'];
        $publishs = $this->_publish->getPublishs([],$order);
        $this->assign([
            'publishs' => $publishs
        ]);
        return $this->template();
    }
    // 用户发布操作
    public function publish_edit(){
        $map = [
            'tid' => input('temp'),
            'type_id' => input('type'),
            'uid' => $this->userinfos['id'],
            'content' => input('content'),
            'addtime' => time(),
        ];
        $result = $this->_publish->insert($map);
        if($result){
            $this->redirect('Ask/publish_list');
        }else{
            $this->error('发布失败');
        }
    }
    //用户聊天页面
    public function message(){
        $mid = input('mid');
        $where = ['id'=>$mid];
        $field = ['id', 'name', 'logo'];
        $merchant = model('merchant')->where($where)->field($field)->find();
        if(empty($merchant)){
            $this->error('请选择聊天对象');
        }
        $user = [
            'id'=>$this->userinfos['id'],
            'nickname' => $this->userinfos['nickname'],
            'headimg' => $this->userinfos['headimg']
        ];
        $status_where = ['mid'=>$mid,'uid'=>$user['id']];
        $this->_message->message_status($status_where);
        $this->assign([
            'title'=>'发布聊天',
            'merchant'=>$merchant,
            'user'=>$user,
        ]);
        return $this->template();
    }
    //聊天列表
    public function message_list(){
        $where = ['uid'=>$this->userinfos['id']];
        $messages = $this->_message->getMessageList($where,'mid');
        $this->assign([
            'title'=>'发布列表',
            'messages'=>$messages,
        ]);
        return $this->template();
    }
    // 异步获取聊天信息
    public function ajax_messages(){
        $uid = input('uid');
        $mid = input('mid');
        $where =  ['uid'=>$uid,'mid'=>$mid];
        $messages = $this->_message->getMessages($where,['addtime'=>'desc']);
        $temp = json_encode($messages);
        $messages = json_decode($temp,true);
        $messages = array_reverse($messages['data']);
        return json_encode($messages);
    }
}