<?php
namespace app\index\controller;
use app\index\controller\Base;
use think\Cookie;
use think\Db;
use think\Session;

class Visa extends Base
{
    private $_visa;
    private $_address;
    private $_visaOrder;
    protected function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->_visa = model('visa');
        $this->_visaOrder = model('visaOrder');
        $this->_address = model('address');
    }
    // 签证列表
    public function visa_list(){
        $this->assign([
            'title' => '小惠猫签证列表',
        ]);
        return $this->template();
    }
    // 签证详情
    public function details(){
        $vid = input('v');
        $where = ['id'=>$vid];
        $act = input('act');
        if($act != 'admin'){
            $where['status'] = 2;
        }
        $visa = $this->_visa->getVisa($where);
//        dump($trip);
        if(empty($visa)){
            return $this->error('签证信息不存在',url('Index/index'));
        }
        if($this->userinfos['type'] == '1'){
            $op = Db::table('ww_userinfo')->where('id',$this->userinfos['op'])->find();
            $this->assign('op',$op);
        }
        if($this->userinfos['type'] == '1'){
//            $op = Db::table('ww_userinfo')->where('id',$this->userinfos['op'])->find();
//            $this->assign('op',$op);
        }
        $this->assign([
            'title' => !empty($visa['title'])?$visa['title']:'小惠猫-旅游行程详情',
            'visa' => $visa,
        ]);
        return $this->template();
    }
    // 异步获取签证
    public function ajax_visas(){
        $where = ['v.status'=>2];
        $visas = $this->_visa->getVisas($where);
        $this->assign('visas',$visas);
        return $this->template();
    }
    //删除订单
    public function order_del(){
        $oid = input('oid');
        $where = ['id' => $oid,'uid' => $this->userinfos['id'],'pay_status'=>['in','0,1']];
        $map = ['del'=>1];
        $result = $this->_visaOrder->where($where)->delete();
        if($result){
            $this->success('删除成功!','Index/order_list');
        }else{
            $this->error('删除失败!','Index/order_list');

        }
    }
    // 订单确认
    public function confirm(){
        $vid = input('v') ? input('v') : session('v');
        $ids = Session::get('ids');
        $where = ['id'=>$vid];
        $visa = $this->_visa->getVisa($where);
        $aid = input('aid');
        $a_where = ['id'=>$aid];
        $address = $this->_address->where($a_where)->find();
        $peoples = Db::table('ly_people')->where('id','in',$ids)->select();
        $num = 0;
        if($ids){
            $num = count(explode(',',$ids))-1;
        }
        $this->assign([
            'title'=>'订单确认',
            'visa'=>$visa,
            'peoples' => $peoples,
            'address' => $address,
            'num' => $num
        ]);
        return $this->template();
    }
    public function ajax_order(){
        $type = input('type');
        $where = ['uid'=>$this->userinfos['id']];
        switch ($type){
            case '0':
                $where['pay_status'] = ['notin','0'];
                //所有订单
                break;
            case '1':
                $where['pay_status'] = '1';
                break;
            case '2':
                $where['pay_status'] = '2';
                $where['confirm'] = '1';
                break;
            case '3':
                $where['pay_status'] = '2';
                $where['confirm'] = '2';
                break;
            default :
                $where['pay_status'] = ['notin','0'];
                break;

        }
        $orders = $this->_visaOrder->getOrders($where);
        $this->assign('orders',$orders);
        return $this->template();
    }

    // 下订单
    public function order(){
        $map = [
            'contact_name'=> input('name')?input('name'):'',
            'contact_phone'=> input('contact')?input('contact'):'',
            'contact_email'=> input('email')?input('email'):'',
            'aid'=> input('aid')?input('aid'):'',
            'vid'=> input('v')?input('v'):'',
            'uid' => $this->userinfos['id'],
            'pay_status' => '1',
            'confirm' => '1',
            'transactor' => session('ids')?session('ids'):'',
            'onumber' => serial(),
            'num' => count(explode(',',session('ids')))-1,
            'addtime' => time(),
        ];
        $visa = $this->_visa->where('id',$map['vid'])->find();
        $map['mid'] = $visa['mid'];
        $map['balance'] = $visa['balance'];
        $map['sell'] = $visa['sell'];
        $map['logistics'] = $visa['logistics'];
        if($this->userinfos['type'] == 0){
            $map['sumprice'] = $visa['logistics'] + $visa['sell'] *$map['num'];
        }else{
            $map['sumprice'] = $visa['logistics'] + take_b($visa['balance'],getCache('take')['core_take']) *$map['num'];
        }

        $error = ['code'=>1,'info'=>'编辑成功'];
        $result = Db::table('ly_visa_order')->insert($map);
        if($result){
            $id = Db::table('ly_visa_order')->getLastInsID();
            $error['orderid'] = $id;
            return json_encode($error,JSON_UNESCAPED_UNICODE);
        }else{
            $error['code'] = 0;
            $error['info'] = '生成失败';
            return json_encode($error,JSON_UNESCAPED_UNICODE);
        }
    }
    //支付方式
    public function order_pay(){
        $oid = input('oid');
        $s_where = ['id'=>$oid,'uid'=>$this->userinfos['id']];
        $shop = Db::table('ly_visa_order')->where($s_where)->find();
        $this->assign([
            'title'=>'选择支付方式',
            'shop'=>$shop,
            'oid'=>$oid,
        ]);
        return $this->template();
    }
    //我的地址列表
    public function addresslist(){
        if(input('v')){
            Session::set('v',input('v'));
        }
        $where = ['uid'=>$this->userinfos['id']];
        $addresslist = $this->_address->getList($where);
        $this->assign([
            'title' => '地址列表',
            'addresslist' => $addresslist,
        ]);

        return $this->template();
    }
    //地址信息
    public function address(){
        $act = 'add';
        $id = input('id');
        if(!empty($id)){
            $act = 'mod';
            $where = ['uid'=>$this->userinfos['id'],'id'=>$id];
            $address = $this->_address->where($where)->find();
            $this->assign([
                'address' => $address
            ]);
        }
        $this->assign([
            'title' => '地址信息添加（修改）',
            'act' => $act,
        ]);
        return $this->template();
    }
    // 添加地址信息
    public function add_address(){
        $act = input('act');
        $id = input('id');
        $uid = $this->userinfos['id'];
        $map = [
            'uid' => $uid,
            'consignee' => input('consignee')?input('consignee'):'',
            'phone'     => input('phone')?input('phone'):'',
            'province'  => input('province')?input('province'):'',
            'city'      => input('city')?input('city'):'',
            'county'   => input('county')?input('county'):'',
            'address'   => input('address')?input('address'):'',
            'default'   => input('default')?input('default'):'0',
        ];
        if($map['default'] == '1'){
            $where = ['uid'=>$uid];
            $mods = ['default' => '0'];
            $address = $this->_address->where($where)->find();
            if(!empty($address)){
                Db::name('address')->where($where)->update($mods);
            }
        }
        if(strcmp($act,'add') === 0){
            $result = $this->_address->addAddress($map);
        }else{
            $where = ['uid'=>$uid,'id'=>$id];
            $result = $this->_address->addAddress($map,$where);
        }
        if ($result){
            return $this->redirect("Visa/addresslist");
        }else{
            return $this->error('添加错误');
        }
    }

    //选择办理人
    public function passengerselect(){
        $v = input('v');
        $where = ['id'=>$v];
        $visa = $this->_visa->getVisa($where);
        if(empty($visa)){
            return $this->error('操作错误');
        }
        $upeoples = Db::table('ly_people')->where(['uid'=>$this->userinfos['id']])->select();
        $this->assign([
            'title' => '办理人的选择',
            'visa'=>$visa,
            'upeoples' => $upeoples
        ]);
        return $this->template();
    }
    //异步获取护照信息
    public function ajax_passport(){
        $pid = input('pid');
        $where = ['pid'=>$pid,'style'=>2];
        $u_where = ['id'=>$pid];
        $uinfo = Db::table('ly_people')->where($u_where)->find();
        if(empty($uinfo)){
            return '{}';
        }
        $passport = Db::table('ly_passport')->where($where)->find();
        if(!empty($passport)){
            $uinfo['passport'] = $passport;
        }
        return json_encode($uinfo,JSON_UNESCAPED_UNICODE);
    }
    //判断用户信息全面性
    public function judge_paper(){
        $pid = input('pid');
        $where = ['pid'=>$pid,'style'=>2];
        $error = ['code'=>1,'info'=>'请完善用户信息'];
        $u_where = ['id'=>$pid];
        $uinfo = Db::table('ly_people')->where($u_where)->find();
        if(empty($uinfo)){
            return json_encode($error,JSON_UNESCAPED_UNICODE);
        }
        $passport = Db::table('ly_passport')->where($where)->find();
        if(empty($passport)){
            return json_encode($error,JSON_UNESCAPED_UNICODE);
        }
        if(empty($uinfo['type']) || empty($uinfo['old'])){
            return json_encode($error,JSON_UNESCAPED_UNICODE);
        }
        $error['code'] = 0;
        return json_encode($error,JSON_UNESCAPED_UNICODE);
    }
    //异步编辑联系人
    public function ajax_editselect(){
        $error = ['code'=>1,'info'=>'编辑成功'];
        $act = input('act');
        $p_map = [
            'uid'=>$this->userinfos['id'],
            'name'=>input('name')?input('name'):'',
            'type'=>input('type')?input('type'):'',
            'old'=>input('old')?input('old'):'',
        ];
        $a_map = [
            'style' =>'2',
            'paper_name' => '护照',
            'idnumber' => input('idcard')?input('idcard'):'',
        ];
        Db::startTrans();
        switch ($act){
            case 'add':
                $a_map['addtime'] = $p_map['addtime'] = time();
                $p_result = Db::table('ly_people')->insert($p_map);
                $pid = Db::table('ly_people')->getLastInsID();
                $a_map['pid'] = $pid;
                $a_result = Db::table('ly_passport')->insert($a_map);
                break;
            case 'update':
                $id = input('pid');
                $where = ['id'=>$id];
                $p_result = Db::table('ly_people')->where($where)->update($p_map);
                $a_id = input('id');
                $a_map['pid'] = $id;
                if(empty($a_id)){
                    $a_result = Db::table('ly_passport')->insert($a_map);
                }else{
                    $a_where = ['id'=>$a_id];
                    $a_result = Db::table('ly_passport')->where($a_where)->update($a_map);
                }
                break;
            default:
                $error['code'] = 0;
                $error['info'] = '非法操作';
                Db::rollback();
                return json_encode($error);
                break;
        }
        if($p_result && $a_result){
            Db::commit();
            return json_encode($error);
        }else{
            Db::rollback();
            return json_encode($error);
        }
    }
    // 异步储存信息选中人
    public function ajax_session(){
        $ids = input('ids');
        Session::set('ids',$ids);
    }
}