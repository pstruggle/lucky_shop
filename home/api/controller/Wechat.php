<?php
namespace app\api\controller;
use think\Controller;
use think\Log;
use think\Session;
use app\api\controller\Webase;
class Wechat extends Webase
{
    private $TOKEN;
    private $_userinfo;
    protected function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->_userinfo = model('userinfo');
        $this->TOKEN = $this->wConfig['token'];
    }
    /*
     * 有效的微信token接口begin
     * */
    public function valid()
    {
        if(empty($_GET["echostr"])){
            $this->responseMsg();
            exit;
        }
        $echoStr = $_GET["echostr"];
        //valid signature , option
        if($this->checkSignature()){
            echo $echoStr;
            exit;
        }
    }
    private function checkSignature()
    {
        // you must define TOKEN by yourself
        if (!$this->TOKEN) {
            throw new Exception('TOKEN is not defined!');
        }

        $signature = $_GET["signature"];
        $timestamp = $_GET["timestamp"];
        $nonce = $_GET["nonce"];

        $token = $this->TOKEN;
        $tmpArr = array($token, $timestamp, $nonce);
        // use SORT_STRING rule
        sort($tmpArr, SORT_STRING);
        $tmpStr = implode( $tmpArr );
        $tmpStr = sha1( $tmpStr );

        if( $tmpStr == $signature ){
            return true;
        }else{
            return false;
        }
    }

    public function responseMsg()
    {
        //get post data, May be due to the different environments
        $postStr = $GLOBALS["HTTP_RAW_POST_DATA"];

        //extract post data
        if (!empty($postStr)){
            /* libxml_disable_entity_loader is to prevent XML eXternal Entity Injection,
               the best way is to check the validity of xml by yourself */
            libxml_disable_entity_loader(true);
            $postObj = simplexml_load_string($postStr, 'SimpleXMLElement', LIBXML_NOCDATA);
            $fromUsername = $postObj->FromUserName;
            $toUsername = $postObj->ToUserName;
            $MsgType = $postObj->MsgType;
            $keyword = trim($postObj->Content);
            $time = time();
            $textTpl = "<xml>
							<ToUserName><![CDATA[%s]]></ToUserName>
							<FromUserName><![CDATA[%s]]></FromUserName>
							<CreateTime>%s</CreateTime>
							<MsgType><![CDATA[%s]]></MsgType>
							<Content><![CDATA[%s]]></Content>
							<FuncFlag>0</FuncFlag>
							</xml>";
            if(!empty( $keyword ))
            {
                $msgType = "text";
                $contentStr = '感谢您的关注，我们将竭诚为您服务！';
                $resultStr = sprintf($textTpl, $fromUsername, $toUsername, $time, $msgType, $contentStr);
                echo $resultStr;
            }else{
                echo "Input something...";
            }

        }else {
            echo "";
            exit;
        }
    }
    //用户授权

    public function wechat_gave($url,$scope=true,$state=''){
//        $wx_openid = $this->GetOpenid($url,$scope,$state);
        $wx_openid = Session::get('wx_openid');
        $where = ['wx_openid' => $wx_openid];
        $userinfo = $this->_userinfo->getUserinfo($where);
        if(empty($userinfo)){
            if(empty($wx_openid))
            {
                if(empty($_GET['code'])){
                    return $this->redirect($this->wechat->oauth2_authorize($url,$scope,$state));
                }
                $access = $this->wechat->oauth2_access();
                if(!empty($access['errcode']) && $access['errcode'] == 40163){
                    return $this->redirect($this->wechat->oauth2_authorize($url,$scope,$state));
                }
                if(empty($access['openid'])){
                    return $this->redirect($this->wechat->oauth2_authorize($url,$scope,$state));
                }
                if(!empty($access) && empty($access['access_token'])){
                    return $this->wechat_gave($url,true,$state);
                }
                $wx_openid = $access['openid'];
                $where = ['wx_openid' => $wx_openid];
                $userinfo = $this->_userinfo->getUserinfo($where);
                if(!empty($userinfo)){
                    Session::set('wx_openid',$wx_openid);
                    return $userinfo;
                }
                $userinfo = $this->wechat->cgi_userInfo($wx_openid);
                if($userinfo['subscribe'] == 0){
                    $userinfo = $this->wechat->oauth2_userinfo($access['access_token'],$access['openid']);
                }
                Session::set('wx_openid',$wx_openid);
            }
            if(empty($userinfo)){
                $userinfo = $this->wechat->cgi_userInfo($wx_openid);
            }
            if(isset($userinfo['subscribe']) && $userinfo['subscribe'] == 0 && empty($userinfo['nickname'])){
                Session::clear();
                return $this->wechat_gave($url,true,$state);
            }
            if(!empty($userinfo['errcode']) && $userinfo['errcode'] == '48001'){
                return $this->wechat_gave($url,true,$state);
            }
            if(empty($userinfo['openid'])){
                Log::write('Wechat log :'.json_encode($this->wConfig));
                return $this->wechat_gave($url,true,$state);
            }
            $map = array();
            $map['wx_openid'] = $userinfo['openid'];
            $map['nickname'] = $userinfo['nickname'];
            $map['city'] = $userinfo['city'];
            $map['province'] = $userinfo['province'];
            $map['headimg'] = $userinfo['headimgurl'];
            $map['country'] = $userinfo['country'];
            $map['sex'] = $userinfo['sex'];
            $map['subscribe'] = isset($userinfo['subscribe'])?$userinfo['subscribe']:'0';
            $map['subscribe_time'] = isset($userinfo['subscribe_time'])?$userinfo['subscribe_time']:'0';
            $map['groupid'] = isset($userinfo['groupid'])?$userinfo['groupid']:'0';;
            $map['addtime'] = time();
            $this->_userinfo->addUser($map);
            $userinfo = $this->_userinfo->getUserinfo($where);
        }
        return $userinfo;
    }
}