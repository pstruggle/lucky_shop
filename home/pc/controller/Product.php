<?php
namespace app\pc\controller;
use app\pc\controller\Base;
use think\Cookie;
use think\Db;

class Product extends Base
{
    private $_ad;
    private $_nav;
    private $_offer;
    private $_line;
    private $_trip;
    private $_shop;

    protected function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->_ad = model('ad');
        $this->_nav = model('nav');
        $this->_offer = model('offer');
        $this->_line = model('line');
        $this->_trip = model('trip');
        $this->_shop = model('shop');
    }
    //行程产品
    public function trip(){
        $url = current_url();
        $url_info = parse_url($url);
        if(!empty($url_info['query'])){
            $where = $url_info['query'];
        }
        if(input('pro_type')){
            $where = "pro_type=".input('pro_type');
        }
        $where = $this->_trip->getWhere();
        $trips = $this->_trip->getTrips($where);
        $page = $trips->render();
        $this->assign([
            'title' => '行程列表',
            'trips' => $trips,
            'page' => $page
        ]);
        return $this->template();
    }
    // 行程详情
    public function trip_details(){
        $trip = $this->_trip->getTrip();
//        dump($trip);
        if(empty($trip)){
            $this->error('行程不存在',url('Index/index'));
        }
        if($this->userinfos['type'] == '1'){
            $op = Db::table('ww_userinfo')->where('id',$this->userinfos['op'])->find();
            $this->assign('op',$op);
        }
        $this->assign([
            'title' => !empty($trip['title'])?$trip['title']:'小惠猫-旅游行程详情',
            'trip' => $trip,
        ]);
        return $this->template();
    }
    // 报名页面
    public function sign_up(){
        $trip = $this->_trip->getTrip();
        $contracts = Db::table('ly_contract')->where(['uid'=>$this->userinfos['id'],'status'=>'0','type'=>$trip['type']])->select();
        $this->assign([
            'title' => !empty($trip['title'])?$trip['title']:'小惠猫-旅游行程详情',
            'trip' => $trip,
            'contracts' => $contracts,
        ]);
        return $this->template();
    }
    // 报名数据处理
    public function sign(){
        $time = time();
        $lists = input('list/a');
        $map = $p_map = $pids = [];
        $trip = $this->_trip->getTrip();
        if(!$trip){
            return $this->error('您预定的行程不存在！');
        }
        $sums = input('sums/a');
        $start = strtotime(input('start'));
        $offer = json_decode($trip['offer'],true);
        $dateStr = date('Ymd',$start);
        $price = 0;
        if($trip['offer_type'] == 2){
            $i = 0;
            foreach ($sums as $sum){
                $price += $offer[$dateStr][$i]['balance'] * $sum;
                $i++;
            }
        }else{
            $price += $offer[$dateStr]['adult_balance'] * $sums[0]+ $offer[$dateStr]['children_balance'] * $sums[1];
        }
        if($price > $this->userinfos['balance']){
            return $this->error('您的余额不足购买该订单' . $price);
        }else{
            if($price > 0){
                Db::table('ww_userinfo')
                    ->where('id', $this->userinfos['id'])
                    ->setDec('balance', $price);
            }else{
                return $this->error('该订单出错' . $price);
            }
        }
        $ok=new \ChineseSpell();
        foreach ($lists as $k => $list){
            $map = [
                'uid'=>$this->userinfos['id'],
                'name'=> $list['name'],
                'sex' => $list['sex'],
                'birthday' => 0,
                'china_phone'=> $list['phone'],
                'nationality'=> 1,
                'addtime' => $time
            ];
            $s1 = iconv('UTF-8', 'gb2312', $list['name']);
            $map['last'] = $ok->getFirstSpell($s1)?ucfirst($ok->getFirstSpell($s1)):'';
            $s2 = iconv('UTF-8', 'gb2312', substr($list['name'],3));
            $map['first'] = $ok->getChineseSpells($s2)?ucfirst($ok->getChineseSpells($s2)):'';
            $result = Db::table('ly_people')->insert($map);
            if($result){
                $pids[] = $pid = Db::table('ly_people')->getLastInsID();
                $p_map[] = [
                    'pid' => $pid,
                    'style' => $list['paper'],
                    'paper_name' => Db::table('ly_paper')->where(['id'=>$list['paper']])->value('paper_name'),
                    'idnumber' => $list['code'],
                    'handle' => 0,
                    'expir_in' => 0,
                    'addtime' => $time
                ];
            }
        }
        $p_result = Db::table('ly_passport')->insertAll($p_map);
        $shop_map = [
            'uid'=>$this->userinfos['id'],
            'tid'=>$trip['id'],
            'mid'=>$trip['mid'],
            'outtime' => $start,
            'onumber' => serial(),
            'offer_type' => $trip['offer_type'],
            'people' => implode(',',$pids),
            'contact_name' => input('contact_name')?input('contact_name'):'',
            'contact_phone'=> input('contact_phone')?input('contact_phone'):'',
            'contact_email' => '',
            'sumprice' => $price,
            'pay_status' => '2',
            'paytime' => $time,
            'use_integral' => 0,
            'payment' => '3',
            'confirm' => '1',
            'remark' => input('remark')?input('remark'):'',
            'addtime' =>$time

        ];

        $shop_map['offer'] = json_encode($offer[$dateStr]);
        if($trip['offer_type'] == 2){
            $shop_map['peoples'] = implode(',',$sums);
        }else{
            $shop_map['man'] = $sums[0];
            $shop_map['child'] = $sums[1];
            $shop_map['adult_balance'] = $offer[$dateStr]['adult_balance'];
            $shop_map['child_balance'] = $offer[$dateStr]['children_balance'];
        }
        $shop_result = Db::table('ly_shop')->insert($shop_map);
        $shop_id = Db::table('ly_shop')->getLastInsID();
        $shop = Db::table('ly_shop')->where('id',$shop_id)->find();
        model('bill')->shop_bill($shop); // 商户账单
        //门店用户账单
        model('play')->addPlay($shop,1);
        //合同
        if(input('contract')){
            $c_where = ['id'=>input('contract')];
            $c_map = [
                'oid' =>$shop_id,
                'price' => input('contract_price'),
                'status' => 1,
                'usetime' => time(),
            ];
            Db::table('ly_contract')->where($c_where)->update($c_map);
        }
        if($shop_result){
            return $this->success('保存成功');
        }else{
            return $this->error('保存失败');
        }
    }
    // 资金列表
    public function finance(){
        $_play = model('play');
        $where = ['uid' => $this->userinfos['id']];
        if(input('type')){
            $where['type'] = input('type');
        }
        if(input('start')){
            $where['addtime'][] = ['>=',strtotime(input('start'))];
        }
        if(input('end')){
            $where['addtime'][] = ['>=',strtotime(input('end'))];
        }
        $order = ['addtime'=>'desc'];
        $plays = $_play->getPlayDatas($where,$order);
        $page = $plays->render();
        $this->assign([
            'title' => '资金列表',
            'plays' => $plays,
            'page' => $page
        ]);
        return $this->template();
    }
    // 汇款
    public function play(){
        $this->assign([
            'title' => '汇款',

        ]);
        return $this->template();
    }
    // 汇款编辑
    public function play_edit(){
        $dates = input('dates')?strtotime(input('dates')):'';
        $map = [
            'uid'=> $this->userinfos['id'],
            'bid' => input('bank')?input('bank'):'0',
            'remark' => input('remark')?input('remark'):'',
            'price' => input('price')?input('price'):'0',
            'name' => input('name')?input('name'):'',
            'remittime' => $dates?$dates:'',
            'status' => 1,
            'type' => 1,
            'addtime' => time()
        ];
        $map['explain'] = '汇款收入：' . $map['price'];
        $_play = model('play');
        $result = $_play->save($map);
        if($result){
            return $this->success('编辑成功，等待审核...');
        }else{
            return $this->error('编辑失败，请稍后再试！');
        }
    }

}
