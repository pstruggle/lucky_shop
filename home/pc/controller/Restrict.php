<?php
namespace app\pc\controller;
use app\pc\controller\Base;
use think\Cookie;
use think\Db;

class Restrict extends Base
{
    private $_user;

    protected function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->_user = model('userinfo');
    }
    // 登录账号
    public function login(){
        $this->assign([
            'title'=> '门店系统登录',
        ]);
        return $this->template();
    }
    // 注册账号
    public function register(){
        $this->assign([
            'title'=> '门店系统注册',
        ]);
        return $this->template();
    }
    public function chacklogin(){
        $code = input('CheckCode');
        $checkcode = json_decode($this->checkcode($code),true);
        if($checkcode['code'] == 0){
            $this->error($checkcode['info']);
        }
        $map = [];
        $map['phone'] = input('phone');
        $map['passwd']  = input('passwd');
        $result = $this->_user->checkUser($map);
        if($result['code'] == 0){
            return $this->error($result['info']);
        }

        $url = input('url')?input('url'):'Index/index';
        return redirect($url);
    }
    // 验证码验证
    public function checkcode($code){
        $data = [];
        $error = ['code'=>0];
        $data['captcha'] = $code;
        $result = $this->validate($data,[
            'captcha|验证码'=>'require|captcha'
        ]);
        if($result !== true){
            $error['info'] = $result;
        }else{
            $error['code'] = $result;
        }

        return json_encode($error,JSON_UNESCAPED_UNICODE);
    }
    // 退出登录
    public function signin(){
        Cookie::clear('wenwen_');
        return redirect('Restrict/login');
    }
    //注册用户
    public function add_user(){
        $map = [];
        $map['phone']   = input('tel');
        $map['passwd']  = input('passwd1');
        $map['province'] = input('province');
        $map['city']    = input('city');
        $map['country']  = input('county');
        $map['nickname']  = input('nickname');
        $map['sex']  = 1;
        $map['headimg']  = '/static/index/images/icon/DefaultAvatar.jpg';
        $map['addtime']  = time();
        if($this->_user->where('phone',$map['phone'])->value('id')){
            return $this->error('手机号码已经注册...');
        }
        $passwd = input('passwd2');
        if(strcmp($passwd,$map['passwd']) != 0){
            $this->error('两次密码不一致');
        }
        $map['passwd'] = md5($map['passwd']);
        if($this->_user->save($map)){
            Cookie::set('id',$this->_user->id);
            Cookie::set('passwd',$map['passwd']);
            Cookie::set('phone',$map['phone']);
            Cookie::set('check','user');
            return redirect('Index/index');
        }
        return $this->error('注册失败...');
    }
    // 门店信息上传页面
    public function store_apply(){
        $where = ['uid' => $this->userinfos['id']];
        $act = 'add';
        $apply = Db::name('store_apply')->where($where)->find();
        if(!empty($apply)){
            $act = 'update';
            switch($apply['status']){
                case '1':
                    $text = '<h6>您已经提交申请，耐心等待审核...</h6>';
                    $this->assign('text',$text);
                    $this->assign('status',1);

                    break;
                case '2':
                    return $this->success('已经审核通过啦！','Index/index');
                    break;
                case '3':
                    $text = '<h1>您的资质审核不通过。</h1>';
                    $this->assign('text',$text);
                    break;
            }
        }
        $this->assign([
            'title' => '申请成为业务员',
            'apply' => $apply,
            'act' => $act
        ]);
        return $this->template();
    }
    //门店信息上传操作
    public function storeedit(){
        $act = input('act');
        $salesman = Cookie::get('salesman');
        $puid = '0';
        if(!empty($salesman)){
            $puid = encrypt($salesman,'D');
            $user = $this->_user->where('id',$puid)->find();
            if (empty($user) || $user['type'] != 1 || $user['clerk'] != 1){
                $puid = 0 ;
            }
        }
        $map = [
            'uid'=> $this->userinfos['id'],
            'name'=> input('name')?input('name'):'',
            'phone'=> input('phone')?input('phone'):'',
            'store'=> input('store')?input('store'):'',
            'province'=> input('province')?input('province'):'',
            'city'=> input('city')?input('city'):'',
            'county'=> input('county')?input('county'):'',
            'address'=> input('address')?input('address'):'',
            'licence'=> input('licence')?input('licence'):'',
            'business'=> input('business')?input('business'):'',
            'status' => '1',
        ];
        if($act == 'add'){
            $map['addtime'] = time();
            $result = Db::name('store_apply')->insert($map);
        }elseif($act == 'update'){
            $result = Db::name('store_apply')->where(['uid'=>$this->userinfos['id']])->update($map);
        }else{
            $result = 0;
        }
        if($result){
            $this->success('编辑成功,等待审核...');
        }else{
            $this->error('编辑失败');
        }
    }

}
