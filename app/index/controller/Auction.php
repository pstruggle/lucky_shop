<?php
/**
 * Created by PhpStorm.
 * 订单控制器
 * User: Administrator
 * Date: 2017\10\11 0011
 * Time: 22:49
 */

namespace app\index\controller;

class Auction extends Base
{
    protected function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }
    // 立即购买，结算页面
    public function buy_now(){
        if(!$this->request->isPost()){
            return $this->error('请求错误');
        }
        $specs_group = input('post.specs_group');
        $good_id = input('post.goods_id');
        $sum = input('post.sum');
        $_good = model('goods');
        $good = $_good->buy_goods($good_id,$specs_group);
        $this->assign([
            'title' => get_cache('config.mall')['store_title'],
            'good' => $good,
            'sum' => $sum
        ]);
        return $this->template();
    }
    // 创建订单
    public function pay_now(){
        if (!$this->request->isPost()){
            return $this->error('请求错误');
        }
        $data = input('post.');
        $data['uid'] = $this->user['id'];
        $data['uname'] = $this->user['nickname'];
        $_orders = model('orders');
        $buy_now = $_orders->buy_now($data);
        $url = url('index/Shan/index');
        $html = buildFrom($url,$buy_now);
        return $html;
        dump($buy_now);
        $param = [
            'body' =>'', //商品主题一般为商品名
            'attach' => '', // 支付回传的值
            'trade_no' => '', // 订单号
            'fee' => '', // 价格以分为单位
            'goods_tag' => '', // 商品标记
            'product_id' => '', // 商品id
        ];
    }
    // 从购物车选中商品购买
    public function buy(){
        if (!$this->request->isPost()){
            return $this->error('请求错误');
        }
        $data = input('post.');
        if(empty($data['carts'])){
            return $this->error('请选择购买商品');
        }
        $where = ['uid'=>$this->user['id'],'id'=>['in',$data['carts']],'order_id'=>'0'];
        $_cart = model('cart');
        $carts = $_cart->get_carts($where);
        if(empty($carts)){
            return $this->error('购物车为空','index/Goods/shop_cart');
        }
        $this->assign([
            'title' => get_cache('config.mall')['store_title'],
            'carts' => $carts,
        ]);
        return $this->template();
    }
    // 创建购物车来的订单
    public function pay(){
        if (!$this->request->isPost()){
            return $this->error('请求错误');
        }
        $data = input('post.');
        $data['uid'] = $this->user['id'];
        $data['uname'] = $this->user['nickname'];

        $_orders = model('orders');
        $buy = $_orders->buy($data);
        $url = url('index/Shan/index');
        $html = buildFrom($url,$buy);
        return $html;
    }
    // 确认订单页面
    public function confirm_order(){

    }
}