<?php
namespace app\admin\controller;
use app\admin\controller\Base;
use think\Controller;
use think\Db;

class Users extends Base
{
    private $_userinfo;

    protected function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->_userinfo = model('userinfo');
    }
    /*
     * 用户列表
     * */
    public function userlist()
    {
        $where = [];
        $type = input('type');
        $phone = input('phone');
        $nickname = input('nickname');
        $uid = input('uid');
        if($type == '0' || !empty($type)){
            $where['type'] = $type;
        }
        if(!empty($phone)){
            $where['phone'] = ['like','%'.$phone.'%'];
        }
        if(!empty($nickname)){
            $where['nickname'] = ['like','%'.$nickname.'%'];
        }
        if(!empty($uid)){
            $where['id'] = ['like','%'.$uid.'%'];
        }
        $order = ['addtime'=>'desc'];
        $userlists = $this->_userinfo->getList($where,$order);
        $page = $userlists->render();
        $this->assign([
            'title' => '用户列表',
            'userlists' => $userlists,
            'page' => $page
        ]);
        return $this->template();
    }
    //会员信息查看
    public function eyeuser(){
        $uid = input('uid');
        $where = ['id'=>$uid];
        $user = $this->_userinfo->getUserinfo($where);
        $this->assign([
            'title' => '用户信息',
            'user' => $user,
        ]);
        return  $this->template();
    }
    //申请业务员用户列表
    public function wait_audit(){
        $where = [];
        if(input('status')){
            $where['a.status'] = input('status');
        }
        if(input('uid')){
            $where['u.id'] = input('uid');
        }
        if(input('name')){
            $where['a.name'] = ['like','%'.input('name').'%'];
        }
        if(input('nickname')){
            $where['u.nickname'] = ['like','%'.input('nickname').'%'];
        }
        $users = $this->_userinfo->applys($where,['a.addtime'=>'desc']);
        $page = $users->render();
        $this->assign([
            'title' => '用户列表',
            'users' => $users,
            'page' => $page
        ]);
        return $this->template();
    }
    //业务员用户列表
    public function wait_store(){
        $where = [];
        if(input('status')){
            $where['s.status'] = input('status');
        }
        if(input('uid')){
            $where['u.id'] = input('uid');
        }
        if(input('name')){
            $where['s.name'] = ['like','%'.input('name').'%'];
        }
        if(input('nickname')){
            $where['u.nickname'] = ['like','%'.input('nickname').'%'];
        }
        $users = $this->_userinfo->stores($where,['s.addtime'=>'desc']);
        $page = $users->render();
        $this->assign([
            'title' => '用户列表',
            'users' => $users,
            'page' => $page
        ]);
        return $this->template();
    }
    // 用户审核信息
    public function store(){
        $uid = input('uid');
        $where = ['uid'=>$uid];
        $apply = Db::name('store_apply')->where($where)->find();
        if(empty($apply)){
            return $this->error('没有找道用户审核信息...');
        }
        $this->assign([
            'title' => '用户审核信息',
            'apply' => $apply,
        ]);
        return $this->template();
    }
    // 用户审核信息
    public function apply(){
        $uid = input('uid');

        $where = ['uid'=>$uid];
        $apply = Db::name('apply')->where($where)->find();
        if(empty($apply)){
            return $this->error('没有找道用户审核信息...');
        }
        $ops = Db::name('userinfo')->where('type',2)->select();
        $a_where = ['u.id' => $apply['puid']];
        $puser = $this->_userinfo->applys($a_where,[],1);
        if (count($puser) > 0){
            $puser = $puser[0];
        }else{
            $puser = null;
        }
//        dump($puser);
        $this->assign([
            'title' => '用户审核信息',
            'ops' => $ops,
            'apply' => $apply,
            'puser' => $puser,
        ]);
        return $this->template();
    }
    // 编辑审核状态
    public function storeedit(){
        $uid = input('uid');
        $where = ['uid'=>$uid];
        $status = input('status');
        $op = input('op')?input('op'):'';
        $clerk = input('clerk')?input('clerk'):'';
        $user = $this->_userinfo->stores($where);
        $map = ['status'=>$status];
        $result = Db::name('store_apply')->where($where)->update($map);
        if(!$result){
            $this->error('编辑失败');
        }
        $aliyun = controller('api/Aliyun');
        if(count($user)>0){
            $data['recNum'] = $user[0]['phone'];
            $data['temp'] = 'sms_status';
        }else{
            $this->error('用户不存在！');
        }

        if($status == '2'){
            $clerk = empty($clerk) ? '2' : $clerk;
            $result = Db::name('userinfo')->where(['id'=>$uid])->update(['type'=>3,'op'=>$op,'clerk'=>$clerk]);
            $data['param'] = [$user[0]['nickname'],'门店','通过'];

        }else{
            $result = Db::name('userinfo')->where(['id'=>$uid])->update(['type'=>0,'op'=>0,'clerk'=>9]);
            $result = Db::name('userinfo')->where(['id'=>$uid])->update(['type'=>0,'op'=>0,'clerk'=>0]);
            $data['param'] = [$user[0]['nickname'],'门店','未通过，请重新提交资料'];
        }
        if($result){
            if($user[0]['status'] == '1'){
                $sms_result = $aliyun->ajax_send($data);
            }
            $this->success('编辑成功');
        }else{
            $this->error('编辑失败');
        }
    }
    // 编辑审核状态
    public function applyedit(){
        $uid = input('uid');
        $where = ['uid'=>$uid];
        $status = input('status');
        $op = input('op');
        $clerk = input('clerk');
        $user = $this->_userinfo->applys($where);
        $map = ['status'=>$status,'op'=>$op, 'clerk'=>$clerk];
        $result = Db::name('apply')->where($where)->update($map);
        if(!$result){
            $this->error('编辑失败');
        }
        $aliyun = controller('api/Aliyun');
        if(count($user)>0){
            $data['recNum'] = $user[0]['phone'];
            $data['temp'] = 'sms_status';
        }else{
            $this->error('用户不存在！');
        }

        if($status == '2'){
            $clerk = empty($clerk) ? '2' : $clerk;
            $result = Db::name('userinfo')->where(['id'=>$uid])->update(['type'=>1,'op'=>$op,'clerk'=>$clerk]);
            $data['param'] = [$user[0]['nickname'],'旅游顾问','通过'];

        }else{
            $result = Db::name('userinfo')->where(['id'=>$uid])->update(['type'=>0,'op'=>0,'clerk'=>9]);
            $result = Db::name('userinfo')->where(['id'=>$uid])->update(['type'=>0,'op'=>0,'clerk'=>0]);
            $data['param'] = [$user[0]['nickname'],'旅游顾问','未通过，请重新提交资料'];
        }
        if($result){
            if($user[0]['status'] == '1'){
                $sms_result = $aliyun->ajax_send($data);
            }
            $this->success('编辑成功');
        }else{
            $this->error('编辑失败');
        }
    }
    //修改用户信息
    public function useredit(){
        $id = input('id');
        $where = ['id'=>$id];
        $map = [
            'phone'=> input('phone'),
            'integral'=> input('integral'),
            'type'=> input('type'),
        ];
        $result = $this->_userinfo->where($where)->update($map);
        if($result){
             $this->success('编辑成功');
        }else{
            $this->error('编辑失败');
        }
    }
    // 门店账单管理
    public function play(){
        $_play = model('play');
        $where = [];
        $order = ['addtime'=>'desc'];
        $plays = $_play->getPlayDatas($where,$order);
        $page = $plays->render();
        $this->assign([
            'title' => '资金列表',
            'plays' => $plays,
            'page' => $page
        ]);
        return $this->template();
    }
    public function play_info(){
        $id = input('id');
        $play = Db::table('ww_play')->where('id',$id)->find();
        if(empty($play)){
            return $this->error('未找到账单');
        }
        $this->assign([
            'title' => '资金列表',
            'play' => $play,
        ]);
        return $this->template();
    }
    public function play_edit(){
        $id = input('id');
        $play = Db::table('ww_play')->where('id',$id)->find();
        if(empty($play)){
            return $this->error('未找到账单');
        }
        $map = [
            'status' => input('status')?input('status'):''
        ];
        Db::startTrans();
        $result = Db::table('ww_play')->where('id',$id)->update($map);
        if($map['status'] == 2){
            $u_result = Db::table('ww_userinfo')->where('id', $play['uid'])->setInc('balance', $play['price']);

        }
        if ($result && ($map['status'] == 3 || $u_result)){
            Db::commit();
            return $this->success('编辑成功');
        }else{
            Db::rollback();
            return $this->error('编辑失败');
        }
    }
}
