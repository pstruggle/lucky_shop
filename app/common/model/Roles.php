<?php
/**
 * Created by PhpStorm.
 * User: cjphp
 * Date: 2018/2/6 0006
 * Time: 14:16
 */

namespace app\common\model;


use think\Exception;

class Roles extends Base
{
    protected $autoWriteTimestamp = true;
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
    }
    public function setCache($pet_name = '')
    {
        $name = lcfirst($this->name);
        $pet_names = explode('_',$pet_name);
        if (empty($pet_names[1])){
            return false;
        }
        $id = $pet_names[1];
        switch ($pet_names[0]){
            case 'role': //  单个角色
                $role = $this->where('id',$id)->find()->toArray();
                get_cache($name.'.role_'.$id,$role);
                break;
            case 'roles':// 组下的角色
                $role = $this->where('group_id',$id)->column('*','group_id');
                get_cache($name.'.roles_'.$id,$role);
                break;
        }
    }

    public function list_where(){
        $where = '';
        return $where;
    }
    public function listing()
    {
        $where = $this->list_where();
        $roles = $this->where($where)->paginate(20);
        $roles->appends(input('get.'));
        $page = $roles->render();
        $role_groups = get_cache('roleGroup');
        $assigns = [
            'title'=>'角色列表',
            'roles' => $roles->toArray()['data'],
            'role_groups'=>$role_groups,
            'page' => $page
        ];
        return $assigns;
    }

    public function edit_view()
    {
        $id = input('id');
        $where = ['id'=>$id];
        $role = $this->where($where)->find();
        if ($role){
            $role = $role->toArray();
        }
        $role_groups = get_cache('roleGroup');
        $assigns = [
            'title'=>'角色编辑',
            'role'=>$role,
            'role_groups'=>$role_groups
        ];
        return $assigns;
    }

    public function edit($data)
    {
        $where = [];
        $id = input('id');
        if ($id){
            $where = ['id'=>$id];
        }
        $result = $this->save($data,$where);
        if($result){
            $name = lcfirst($this->name);

            $this->setCache($name.'.role_'.$id);
        }
        return $result;
    }

    // 权限列表
    public function grant(){
        $id = input('id');
        if (!$id){
            throw new Exception('请选择一个有效角色');
        }
        $name = lcfirst($this->name);
        $role = get_cache($name.'.role_'.$id);
        $assigns = [
            'title'=>'为角色赋予权限',
            'role'=>$role
        ];
        return $assigns;
    }

}