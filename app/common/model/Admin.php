<?php
/**
 * Created by PhpStorm.
 * User: cjphp
 * Date: 2018/2/7 0007
 * Time: 11:39
 */

namespace app\common\model;


use think\Exception;
use think\Request;

class Admin extends Users
{
//    protected $autoWriteTimestamp = true;
    protected $type = ['lastdate'=>'datetime','firstdate'=>'datetime','overdate'=>'datetime',];
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
    }
    public function list_where()
    {

        return parent::list_where(); // TODO: Change the autogenerated stub
    }

    public function listing()
    {
        $where = $this->list_where();
        $join = [
            ['users u',"a.uid=u.id",'left']
        ];
        $admins = $this->alias('a')->where($where)->join($join)->paginate(20);
        $admins->appends(input('get.'));

        $page = $admins->render();
        $role_groups = get_cache('roleGroup');
        $role_name = "roles.role_";
        $assigns = [
            'admins'=>$admins->toArray()['data'],
            'page'=>$page,
            'role_name'=>$role_name,
            'role_groups'=>$role_groups,
            'title'=>'管理员用户列表'
        ];
        return $assigns;
    }

    public function edit_view()
    {
        $join = [
            ['users u',"a.uid=u.id",'left']
        ];
        $id = input('id');
        $where = ['a.uid'=>$id];
        $admin = $this->alias('a')->where($where)->join($join)->find();
        if ($admin){
            $admin = $admin->toArray();
        }
        $role_groups = get_cache('roleGroup');
        $assigns = [
            'title'=>'管理员编辑',
            'role_groups'=>$role_groups,
            'admin'=>$admin,
        ];
        return $assigns;
    }

    public function edit($data)
    {
        $admin_where = [];

        $admin_data = [
            'firstdate'=>$data['firstdate'],
            'overdate'=>$data['overdate'],
            'group_id'=>$data['group_id'],
            'role_id'=>$data['role_id'],
            'islock'=>empty($data['islock'])?'0':$data['islock']
            ];
        unset($data['firstdate'],$data['overdate'],$data['islock'],$data['group_id'],$data['role_id']);
        $user_data = $data;
        $user_data['is_admin'] = 1;
        $_user = model('users');
        $user = $_user->edit($user_data);
        if ($user){
            $admin_data['uid'] = $admin_where['uid'] = $user;
            $admin = $this->where($admin_where)->find();
            if(!$admin){
                unset($admin_where);
            }
            $admin = $this->save($admin_data,$admin_where);
            return $admin;
        }else{
            throw new Exception($_user->getError());
        }
    }
    public function setFirstdateAttr($firstdate){
        return strtotime($firstdate);
    }
    public function setOverdateAttr($overdate){
        return strtotime($overdate);
    }

}